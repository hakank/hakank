/*
  http://forums.anandtech.com/showthread.php?p=29473624
  """
  Not sure if this is the correct section but I'll give it a shot. I'm 
  looking for numeric sequence prediction program. Say if I input a 
  set of   or #s say three times and see if it can find a pattern on 
  the next #. 
  say if I input

  first input 3 0 0 4 2 9 6
  second input 4 1 1 5 3 0 7
  third input 5 2 2 6 4 1 8

  Now if you're looking at the above   you would notice that I add one 
  to each   every round. I need a program that can find patterns like that 
  and predict the next #. Basically a program that can think and uses a 
  gizillion methods to see if there is a trend/pattern and try to come 
  up with the next set of #s. Is there such program and can I acquire 
  it for use.

  Or a second example would be something like this:
  First set will be a+b+c = D
  second set (D+a)+(D+b)+(D+c) = D
  third set will be the same as second set because it just repeats the 
  same process so a,b,c would be what I would inpute and D would 
  total +a,b,c and so on.
  
  Is there such program? Also if i'm not clear on anything please let me know. 
  """

  See symbolic_regression_problem1.pi

  Hmm, perhaps I don't understood the stated problem correctly, 
  Perhaps it was really
     3 0 0 4 2 9 6 ?
  ?

  Using stop_criteria=generations and num_gens=1800:

  * Using n=1
    gen = 65  (time: 2.279s)
    results_best = [[5,(A - 3) mod (4 + (A + 2 + A))]]

    gen = 62  (time: 2.136s)
    results_best = [[5,(A - 3) mod (A + A + 6)]]

  * Using n=2
    gen = 1373  (time: 43.265s)
    results_best = [[2.75,(A - 9) mod 2 * (4 + A + A / 8)]]

    gen = 1206  (time: 36.958s)
    results_best = [[2,(A - 8) * 8 mod 5 * 3]]

  * Using n=3
    gen = 1724  (time: 66.347s)
    results_best = [[1.999999999999999,A + B * B / (6 - 3) + 2 * C mod (6 * 1)]]

    gen = 1570  (time: 61.578s)
    results_best = [[1,(6 - (A - 6) * (2 * 8) - B) mod 10]]


   Cf problem1.conf

*/
data(problem1b,Data,Vars,Unknown,Ops,Constants,MaxSize,Params) :-
  make_seq([3, 0, 0, 4, 2, 9, 6],2,Data,Unknown,Vars),
  Ops = [+,-,*,/,mod],
  Constants = 1..10,          
  MaxSize = 11,
  Params = new_map([% stop_criteria=generations,
                    num_gens=1800
                   ]).
