/*
 
  Sqrt etc.

  Generated by
  $ perl -le 'for (1..20) { my $x = int(rand(100)); print "$x ", sqrt(abs(2*$x))+3}' 
 
  [program = 3 + sqrt(X + X),res = 15.961481396815721,count = 1004]
  [program = 3 + sqrt(X * 2),res = 15.961481396815721,count = 359]
  [program = sqrt(X + X) + 3,res = 15.961481396815721,count = 37]
  [program = sqrt(X * 2) + 3,res = 15.961481396815721,count = 13]
  [program = sqrt(X + X) - -3,res = 15.961481396815721,count = 12]
  [program = sqrt(X * 2) - -3,res = 15.961481396815721,count = 5]
  [program = sqrt(9) + sqrt(X + X),res = 15.961481396815721,count = 2]
  [program = sqrt(X + X) - (-11 - -8),res = 15.961481396815721,count = 1]
  [program = X - (X - 3) + sqrt(X + X),res = 15.961481396815721,count = 1]
  [program = 7 - 4 + sqrt(X + X),res = 15.961481396815721,count = 1]
  [program = sqrt(9) * 1 + sqrt(X + X),res = 15.961481396815721,count = 1]
  [program = sqrt(X + X) + (1 - -2),res = 15.961481396815721,count = 1]
  [program = sqrt(X + X) + sqrt(9) * 1,res = 15.961481396815721,count = 1]

  resultMap = [15.961481396815721 = 13]



  Cf sqrt_formula2.conf
*/
import util.
data(sorted,Data,Vars,Unknown,Ops,Constants,MaxSize,Params) :-
  Data = [ [[X],Y] : [X,Y] in chunks_of([
84,15.9614813968157,
5,6.16227766016838,
6,6.46410161513775,
27,10.3484692283495,
57,13.6770782520313,
54,13.3923048454133,
41,12.0553851381374,
92,16.5646599662505,
20,9.32455532033676,
71,14.916375287813,
41,12.0553851381374,
89,16.3416640641263,
25,10.0710678118655,
35,11.3666002653408,
37,11.6023252670426,
75,15.2474487139159,
1,4.41421356237309,
62,14.13552872566,
41,12.0553851381374,
61,14.0453610171873
  ],2)],
  Ops = [+,-,*,sqrt],
  Constants = -20..20,
  Unknown = [84],
  Vars = ['X'], 
  MaxSize = 21,
  Params = new_map([approx=0.01,
                   init_size=200,
                    stop_criteria=generation,
                    num_gens=1800
                   ]).
