/*
 
  de Bruijn sequence, k=5, n=4
  http://www.hakank.org/comb/debruijn.cgi?k=5&n=4&submit=Ok

  Best so far:
  gen = 13627  (time: 60.178s)
  results_best = [[4,B + (A - C == E + D)]]


  Cf timeseries_debruijn.conf
*/
import util.
data(sorted,Data,Vars,Unknown,Ops,Constants,MaxSize,Params) :-
  Seq = [0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,1,1,0,0,1,2,0,0,1,3,0,0,1,4,0,0,2,1,0,0,2,2,0,0,2,3,0,0,2,4,0,0,3,1,0,0,3,2,0,0,3,3,0,0,3,4,0,0,4,1,0,0,4,2,0,0,4,3,0,0,4,4,0,1,0,1,0,2,0,1,0,3,0,1,0,4,0,1,1,1,0,1,1,2,0,1,1,3,0,1,1,4,0,1,2,1,0,1,2,2,0,1,2,3,0,1,2,4,0,1,3,1,0,1,3,2,0,1,3,3,0,1,3,4,0,1,4,1,0,1,4,2,0,1,4,3,0,1,4,4,0,2,0,2,0,3,0,2,0,4,0,2,1,1,0,2,1,2,0,2,1,3,0,2,1,4,0,2,2,1,0,2,2,2,0,2,2,3,0,2,2,4,0,2,3,1,0,2,3,2,0,2,3,3,0,2,3,4,0,2,4,1,0,2,4,2,0,2,4,3,0,2,4,4,0,3,0,3,0,4,0,3,1,1,0,3,1,2,0,3,1,3,0,3,1,4,0,3,2,1,0,3,2,2,0,3,2,3,0,3,2,4,0,3,3,1,0,3,3,2,0,3,3,3,0,3,3,4,0,3,4,1,0,3,4,2,0,3,4,3,0,3,4,4,0,4,0,4,1,1,0,4,1,2,0,4,1,3,0,4,1,4,0,4,2,1,0,4,2,2,0,4,2,3,0,4,2,4,0,4,3,1,0,4,3,2,0,4,3,3,0,4,3,4,0,4,4,1,0,4,4,2,0,4,4,3,0,4,4,4,1,1,1,1,2,1,1,1,3,1,1,1,4,1,1,2,2,1,1,2,3,1,1,2,4,1,1,3,2,1,1,3,3,1,1,3,4,1,1,4,2,1,1,4,3,1,1,4,4,1,2,1,2,1,3,1,2,1,4,1,2,2,2,1,2,2,3,1,2,2,4,1,2,3,2,1,2,3,3,1,2,3,4,1,2,4,2,1,2,4,3,1,2,4,4,1,3,1,3,1,4,1,3,2,2,1,3,2,3,1,3,2,4,1,3,3,2,1,3,3,3,1,3,3,4,1,3,4,2,1,3,4,3,1,3,4,4,1,4,1,4,2,2,1,4,2,3,1,4,2,4,1,4,3,2,1,4,3,3,1,4,3,4,1,4,4,2,1,4,4,3,1,4,4,4,2,2,2,2,3,2,2,2,4,2,2,3,3,2,2,3,4,2,2,4,3,2,2,4,4,2,3,2,3,2,4,2,3,3,3,2,3,3,4,2,3,4,3,2,3,4,4,2,4,2,4,3,3,2,4,3,4,2,4,4,3,2,4,4,4,3,3,3,3,4,3,3,4,4,3,4,3,4,4,4,4,0,0,0],
  N = 5,
  Slice = 30,
  make_seq(Seq[1..Slice],N,Data,Unknown,Vars),    
  Ops = [+,-,*,mod,mod_replace,pow2,if_then_else,!=,==],
  MaxSize = 51,
  Params = new_map([
                    init_size=100 % ,
                    % stop_criteria=generation,
                    % num_gens=100
                   ]).
