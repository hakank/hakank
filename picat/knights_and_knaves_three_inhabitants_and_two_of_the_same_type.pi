/* 

  Knight and knaves: Three inhabitants and two of the same type in Picat.

  From Adrian Groza "Modelling Puzzles in First Order Logic"
  """
  Puzzle 67. Three inhabitants and two of the same type

  Suppose instead, A and B say the following: A: "B is a knave". B: "A and C are of the
  same type". What is C? (puzzle 34 from Smullyan (2011))
  """  

  [0,1,0]
  A: Knave  B: Knight  C: Knave
  [1,0,0]
  A: Knight  B: Knave  C: Knave

  C is a Knave. A and B are unknown.

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import cp.

main => go.

go ?=>
  Knave = 0, Knight = 1,
  Ps = [A,B,C],
  Ps :: [Knave,Knight],

  A #<=> B #= Knave,
  
  B #<=> A #= C,

  Vars = [A,B,C],
  solve(Vars),

  println(Vars),
  Map = new_map([0="Knave",1="Knight"]),
  printf("A: %w  B: %w  C: %w\n",Map.get(A), Map.get(B),Map.get(C)),
  fail,
    
  nl.
go => true.
