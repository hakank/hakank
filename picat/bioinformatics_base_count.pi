/* 

  Bioinformatics/base_count (Rosetta code) in Picat.


  http://rosettacode.org/wiki/Bioinformatics/base_count
  """
  Given this string representing ordered DNA bases:

  CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG
  CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG
  AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT
  GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT
  CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG
  TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA
  TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT
  CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG
  TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC
  GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT


  Task

  - "Pretty print" the sequence followed by a summary of the counts of each of 
    the bases:   (A, C, G, and T)   in the sequence
  - print the total count of each base in the string.

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.

main => go.

go =>
  dna(DNA, ChunkSize),
  Count = 0,
  println("Sequence:"),
  Map = new_map(['A'=0,'C'=0,'G'=0,'T'=0]),
  foreach(Chunk in DNA.chunks_of(ChunkSize))
    printf("%4d: %s\n", Count, Chunk),
    Count := Count + Chunk.len,
    foreach(C in Chunk)
      Map.put(C,Map.get(C)+1)
    end
  end,
  println("\nBase count:"),
  foreach(C in "ACGT")
    printf("%5c: %3d\n", C, Map.get(C))
  end,
  printf("Total: %d\n", Count),
  nl.


dna(DNA,ChunkSize) =>
  DNA = "CGTAAAAAATTACAACGTCCTTTGGCTATCTCTTAAACTCCTGCTAAATG
CTCGTGCTTTCCAATTATGTAAGCGTTCCGAGACGGGGTGGTCGATTCTG
AGGACAAAGGTCAAGATGGAGCGCATCGAACGCAATAAGGATCATTTGAT
GGGACGTTTCGTCGACAAAGTCTTGTTTCGAGAGTAACGGCTACCGTCTT
CGATTCTGCTTATAACACTATGTTCTTATGAAATGGATGTTCTGAGTTGG
TCAGTCCCAATGTGCGGGGTTTCTTTTAGTACGTCGGGAGTGGTATTATA
TTTAATTTTTCTATATAGCGATCTGTATTTAAGCAATTCATTTAGGTTAT
CGCCGCGATGCTCGGTTCGGACCGCCAAGCATCTGGCTCCACTGCTAGTG
TCCTAAATTTGAATGGCAAACACAAATAAGATTTAGCAATTCGTGTAGAC
GACCGGGGACTTGCATGATGGGAGCAGCTTTGTTAAACTACGAACGTAAT".delete_all('\n'),
  ChunkSize = 50.
