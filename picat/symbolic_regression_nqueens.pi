/*

  Number of solutions for n-queens
  N:  1          1 solutions
  N:  2          0 solutions
  N:  3          0 solutions
  N:  4          2 solutions
  N:  5         10 solutions
  N:  6          4 solutions
  N:  7         40 solutions
  N:  8         92 solutions
  N:  9        352 solutions
  N: 10        724 solutions
  N: 11       2680 solutions
  N: 12      14200 solutions
  N: 13      73712 solutions
  N: 15    2279184 solutions


  * stop_criteria=generations num_gens=1800
    gen = 910  (time: 11.608s)
    results_best = [[31,6 mod if_then_else(A,A,A) * (7 * (A mod 3))]]

    gen = 1074  (time: 13.731s)
    results_best = [[18.533333333333331,if_then_else(pow_mod2(A,6 == A),pow_mod2(2,A) / if_then_else(A,-10,3),-6 mod 10)]]



*/
data(nqueens,Data,Vars,Unknown,Ops,Constants,MaxSize,Params) :-
  Seq = [1,0,0,2,10,4,40,92],
  println(seq=Seq),
  (
    make_point_seq(Seq,Data,Unknown,Vars)
    % ; 
    % make_seq(Seq,2,Data,Unknown,Vars)
  ),
  Ops = [+,-,*,/,mod,odd,even,if_then_else,==,!=,pow_mod2,sun_i,if_less],
  % Ops = [+,-,*,/,mod,odd,even, pow_mod],  
  Constants = -10..10,
  MaxSize = 31,
  Params = new_map([
                    init_size=500,
                    stop_criteria=generations,
                    num_gens=1800
                   ]).

