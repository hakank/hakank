/* 

  General FizzBuzz in Picat.

  From https://www.reddit.com/r/prolog/comments/f27bxe/weekly_coding_challenge_2_general_fizzbuzz/
  """
  Weekly coding challenge #2: General FizzBuzz

  Apologies for the late arrival of this week's challenge. We're still getting 
  used to this.

  Last week's challenge didn't see much participation (thank you to those of you 
  who did submit solutions!) so I thought we could try an easier one. It's 
  General FizzBuzz: like FizzBuzz, but more general! Instead of just "Fizz" 
  on 3 and "Buzz" on 5, the user gets to pick what words to print on what 
  factors first. Please follow that link to Rosetta Code for the description.

  This is a good exercise for managing a little bit of state in Prolog. Can you 
  do the challenge without using the dynamic database predicates such as 
  assert/1, asserta/1, assertz/1 and retract/1? Good practice for beginners.
  """

  Cf http://hakank.org/picat/fizzbuzz.pi

  This model was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.

main => go.


go ?=>
  general_fizzbuzz(100),
  nl,
  general_fizzbuzz(100,[3="Fizz",5="Buzz",15="FizzBuzz"]),
  nl,
  general_fizzbuzz(100,[3="a",5="b",15="c"]),
  nl,
  general_fizzbuzz(100,[2="two",3="three",5="five"]),
  nl,
  general_fizzbuzz(100,[42="FORTYTWO!"]),  
  nl.

go => true.


general_fizzbuzz(N) =>
  Map = [3="Fizz",5="Buzz",15="FizzBuzz"],
  general_fizzbuzz(N,Map).
   
general_fizzbuzz(N,Map) =>
  FB = [I : I in 1..N],
  foreach(I in FB,K=V in Map) 
    if I mod K == 0 then
      FB[I] := V
    end
 end,
 println([F.to_string : F in FB].join(" ")).
