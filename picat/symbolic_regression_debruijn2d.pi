/*
  Number of solutions for de Bruijn 2D

  * stop_criteria=generations num_gens=1800
    gen = 1342  (time: 51.730s)
    results_best = [[183,base * -2 * (base - -1) mod (pow_mod2(base,rows2 + rows) - 7)]]

    gen = 1535  (time: 59.717s)
    results_best = [[154,pow_mod2(cols,base) + (cols + pow_mod2(-2 + pow_mod2(base,rows2),cols))]]


             
  Cf debruijn2d.conf

*/
import util.
data(debruijn2d,Data,Vars,Unknown,Ops,Constants,MaxSize,Params) :-
    Data = [ [[A,B,C,D,E],F] : [A,B,C,D,E,F] in chunks_of([
2,2,2,2,2,8,
4,4,2,2,2,32,
2,2,2,2,3,60,
3,3,2,2,2,162,
2,2,2,2,4,216,
2,2,2,2,5,560 % ,
% 2,2,2,2,6,1200,
% 2,2,2,2,7,2268,
% 2,2,2,2,8,3920,
% 2,2,2,2,9,6336,
% 2,2,2,2,10,9720,
% 3,3,2,2,3,15696,
% 3,3,3,3,3,19584,
% 4,4,3,3,2,54048,
% 3,3,2,2,4,242964
             ],6)],
  Unknown = [1,1,1,1,1],             
  Ops = [+,/,-,*,mod,pow_mod2],
  Constants = -10..10,
  Vars = ['rows','cols','rows2','cols2','base'],
  MaxSize = 11,
  Params = new_map([
                    stop_criteria=generations,
                    num_gens=1800
                    ]).

