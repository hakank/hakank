/*

  Henon

  Note: This is really a recursive function of order 2

  Cf henon.conf

*/
import util.
data(henon,Data,Vars,Unknown,Ops,Constants,MaxSize,Params) :-
  % This is the data in henon.conf but it's just a recursive
  Data = [ [[X], Y] : [X,Y] in  chunks_of([
0.174198762,0.789231658,
1.19428623,0.174198762,
-0.944587767,1.19428623,
0.109141454,-0.944587767,
0.699947059,0.109141454,
0.346846193,0.699947059,
1.04156089,0.346846193,
-0.41473493,1.04156089,
1.07166123,-0.41473493,
-0.7322613,1.07166123,
0.570809126,-0.7322613,
0.324169308,0.570809126,
1.02412271,0.324169308,
-0.371107399,1.02412271,
1.1144278,-0.371107399,
-0.850061357,1.1144278,
0.322682291,-0.850061357,
0.599208176,0.322682291,
0.594134092,0.599208176,
0.685569048,0.594134092,
0.520233393,0.685569048,
0.826770782,0.520233393,
0.199100092,0.826770782,
1.19253409,0.199100092,
-0.931262434,1.19253409,
0.143610612,-0.931262434,
0.691747665,0.143610612,
0.373162478,0.691747665,
1.01257396,0.373162478,
-0.323479712,1.01257396,
1.15727746,-0.323479712,
-0.972051382,1.15727746,
0.0243458878,-0.972051382,
0.707554758,0.0243458878,
0.306416512,0.707554758,
1.08081889,0.306416512,
-0.543512344,1.08081889,
0.910677731,-0.543512344,
-0.324121207,0.910677731,
1.126127,-0.324121207,
-0.872663081,1.126127,
0.271681011,-0.872663081,
0.634866297,0.271681011,
0.517227054,0.634866297,
0.815926552,0.517227054,
0.223137498,0.815926552,
1.17507148,0.223137498,
-0.866168976,1.17507148,
0.302173346,-0.866168976,
0.612317085,0.302173346,
0.565746903,0.612317085,
0.73559773,0.565746903,
0.412178427,0.73559773,
0.982831895,0.412178427,
-0.228688344,0.982831895,
1.22163188,-0.228688344,
-1.15794468,1.22163188,
-0.510680676,-1.15794468,
0.287503958,-0.510680676,
0.731073856,0.287503958,
0.337994605,0.731073856,
1.05938566,0.337994605,
-0.469818771,1.05938566,
1.00879419,-0.469818771,
-0.565677583,1.00879419,
0.854650676,-0.565677583,
-0.192302138,0.854650676,
1.2046231,-0.192302138,
-1.08925402,1.2046231,
-0.299676985,-1.08925402,
0.547495008,-0.299676985,
0.490445852,0.547495008,
0.827496529,0.490445852,
0.188483089,0.827496529,
1.19851279,0.188483089,
-0.954460919,1.19851279,
0.0841599107,-0.954460919,
0.703745663,0.0841599107,
0.331886858,0.703745663,
1.05691528,0.331886858,
-0.464331776,1.05691528,
1.01522899,-0.464331776,
-0.582265377,1.01522899,
0.829922557,-0.582265377,
-0.138959587,0.829922557,
1.22194314,-0.138959587,
-1.13209069,1.22194314,
-0.427698255,-1.13209069,
0.404276639,-0.427698255,
0.642875075,0.404276639,
0.54267931,0.642875075,
0.780561388,0.54267931,
0.309817255,0.780561388,
1.099787,0.309817255,
-0.600398839,1.099787,
0.825265884,-0.600398839,
-0.133608907,0.825265884,
1.22258794,-0.133608907,
-1.13269222,1.22258794,
-0.429412067,-1.13269222
  ],2)],
  Vars = ['X'],
  Unknown = [-0.429412067], % Should be -1.13269222
  % Seq = [D[1,1] : D in DataOrig],
  % println(seq=Seq),
  % make_seq(Seq,1,Data,Unknown,Vars),
  Ops = [+,*,/,-,sqrt,sin,pow2,log],
  Constants = [frand(-3,3) : _ in 1..10],
  Params = new_map([approx = 0.1,
                    % num_gens=30,
                    init_size=500,
                    show_only_improvements=true,
                    show_best=1,
                    show_instances=false
                    ]),
  MaxSize = 21.
