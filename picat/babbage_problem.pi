/* 

  Babbage problem (Rosetta code) in Picat.

  http://rosettacode.org/wiki/Babbage_problem
  """
  Charles Babbage, looking ahead to the sorts of problems his Analytical Engine would be 
  able to solve, gave this example:
  What is the smallest positive integer whose square ends in the digits 269,696?
  — Babbage, letter to Lord Bowden, 1837; see Hollingdale and Tootill, Electronic Computers, 
  second edition, 1970, p. 125.

  He thought the answer might be 99,736, whose square is 9,947,269,696; but he couldn't be certain.


  Task

  The task is to find out if Babbage had the right answer — and to do so, as far as your 
  language allows it, in code that Babbage himself would have been able to read and understand. 
  As Babbage evidently solved the task with pencil and paper, a similar efficient solution is preferred.

  For these purposes, Charles Babbage may be taken to be an intelligent person, familiar with 
  mathematics and with the idea of a computer; he has written the first drafts of simple computer 
  programmes in tabular form. [Babbage Archive Series L].


  Motivation

  The aim of the task is to write a program that is sufficiently clear and well-documented for such a 
  person to be able to read it and be confident that it does indeed solve the specified problem.
  """
  

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import cp.

main => go.

go =>
  N = 1,
  while (N**2 mod 1000000 != 269696)
    N := N + 1
  end,
  println(N).

% Using constraint modelling
go2 =>
  N*N mod 1000000 #= 269696,
  N #> 0, % positive integer
  solve($[min(N)],[N]), % find minium
  println(n=N).


go3 =>
  babbage(N),
  println(N).

babbage(N) :-
  N*N mod 1000000 #= 269696,
  N #> 0, % positive integer
  solve($[min(N)],[N]). % find minium
  