/* 

  Advent of Code 2022 - Day 8 in Picat.

  https://adventofcode.com/2022/day/8

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.

main => go.

go =>
  % File = "8_test.txt",
  File = "8.txt",  
  Lines = read_file_lines(File),
  N = Lines.len,

  % Convert to integers
  Matrix = new_array(N,N),  
  foreach(I in 1..N, J in 1..N)
    Matrix[I,J] = Lines[I,J].to_int
  end,

  % For Part 1
  X = new_array(N,N),
  bind_vars(X,0),

  % For Part 2
  Y = new_array(N,N),
  bind_vars(Y,0),

  % Part 1: External trees are alwasy visible
  foreach(I in 1..N)
    X[I,1] := 1, X[1,I] := 1, X[I,N] := 1, X[N,I] := 1
  end,

  % Part1: Check if this internal cell is seen from any side
  % Part2: Count how many trees are visible from this internal tree
  foreach(I in 2..N-1, J in 2..N-1)
    
    R1 = [Matrix[A,J] : A in 1..I],
    num_skyscrapes(R1,C1_1),
    num_skyscrapes2(R1,C2_1),
    
    R2 = [Matrix[I,A] : A in 1..J],
    num_skyscrapes(R2,C1_2),
    num_skyscrapes2(R2,C2_2),
    
    R3 = [Matrix[A,J] : A in I..N].reverse,
    num_skyscrapes(R3,C1_3),
    num_skyscrapes2(R3,C2_3),
    
    R4 = [Matrix[I,A] : A in J..N].reverse,
    num_skyscrapes(R4,C1_4), 
    num_skyscrapes2(R4,C2_4),
    
    if C1_1 + C1_2 + C1_3 + C1_4 > 0 then
      X[I,J] := 1
    end,
    Y[I,J] := prod([C2_1,C2_2,C2_3,C2_4])

  end,

  println(part1=sum_matrix(X)),
  println(part2=sum_matrix(Y)),  
  
  nl.


sum_matrix(X) = sum(X.array_matrix_to_list_matrix.flatten).

% Is this tree (X.last) visible from outside?
num_skyscrapes(Y,C) =>
  N = length(Y),
  X = last(Y),
  C = cond(sum([1 : I in 1..N-1, Y[I] < X]) == N-1,1,0).

% How many trees are visible?
num_skyscrapes2(Y,C) =>
  Y2 = Y.reverse,
  Y2 = [X|Rest],
  C1 = 0, F = true,
  foreach(T in Rest, break(F == false))
    C1 := C1 + 1,
    if X <= T then
      F := false
    end
  end,
  C = C1.
