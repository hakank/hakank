/* 

  Advent Of Code 2022 - Day 2 in Picat.

  https://adventofcode.com/2022/day/2

  This version uses DCG to parse the file.

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.

main => go.



go =>
  % File = "2_test.txt",  
  File = "2.txt",  
  Chars = read_file_chars(File),
  parse_lines(Runs,Chars,[]),

  member(Part,1..2),
  
  Points = 0,  
  foreach([Other,Me] in Runs)
    map_other(Other,O),
    
    if Part == 1 then
    
      map_me1(Me,M),
      ( (beats(M,O),P2=6)
        ;
        (draw(M,O),P2=3)
        ;
        (loses(M,O),P2=0)
      ),
      Pick = M
      
    else
    
      map_me2(Me,M2),
      call(M2,Pick,O),
      map_points(M2,P2)
      
    end,

    map_points(Pick,P1),
    P = P1 + P2,
    Points := Points + P
  end,
  println(Points),
  fail,
  nl.

map_other('A',"Rock").
map_other('B',"Paper").
map_other('C',"Scissors").

map_me1('X',"Rock").
map_me1('Y',"Paper").
map_me1('Z',"Scissors").

map_me2('X',loses).
map_me2('Y',draw).
map_me2('Z',beats).

map_points("Rock",1).
map_points("Paper",2).
map_points("Scissors",3).
map_points(beats,6).
map_points(draw,3).
map_points(loses,0).

beats("Rock","Scissors").
beats("Scissors","Paper").
beats("Paper","Rock").

loses(X,Y) :- beats(Y,X).

draw(X,X).

%
% DCG to parse the file
%
parse_line([A,B]) --> [A]," ", [B].

parse_lines([Line|Lines]) --> parse_line(Line), "\n", parse_lines(Lines).
parse_lines([Line]) --> parse_line(Line).
parse_lines([]).
