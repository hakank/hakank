/* 

  Advent of Code 2022 - Day 3 in Picat.

  https://adventofcode.com/2022/day/3

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.

main => go.

go =>
  % File = "3_test.txt",
  File = "3.txt",
  Lines = read_file_lines(File),

  % Part 1
  Commons1 = [],
  foreach(Line in Lines)
    Len = Line.len,
    L2 = Len // 2,
    H1 = Line[1..L2].make_hash,
    H2 = Line[L2+1..Len].make_hash,
    Commons1 := Commons1 ++ [common(H1,H2)]
  end,
  println(Commons1.score),

  % Part 2
  Commons2 = [],
  foreach([L1,L2,L3] in chunks_of(Lines,3))
    H1 = L1.make_hash,
    H2 = L2.make_hash,
    H3 = L3.make_hash,
    Commons2 := Commons2 ++ [common(H1,H2,H3)]
  end,
  println(Commons2.score),
  nl.

% Shorter variant, just using list comprehension
% and member/2 to identify the common char
go2 =>
  % File = "3_test.txt",
  File = "3.txt",

  Lines = read_file_lines(File),
  println([C : Line in Lines, Len=Line.len, L2=Len//2,member(C,Line[1..L2]),member(C,Line[L2+1..Len])].score),
  println([C : [S1,S2,S3] in chunks_of(Lines,3), member(C,S1),member(C,S2),member(C,S3)].score),
  nl.


score(L) = Score =>
  Score1 = 0,
  alpha(Alpha),
  foreach(E in L)
    nth(I,Alpha,E),
    Score1 := Score1 + I
  end,
  Score = Score1.


% For Part 1
common(H1,H2) = Common =>
  Common1 = _,
  foreach(E in H1.keys)
    if H2.has_key(E) then
      Common1 := E
    end
  end,
  Common = Common1.

% For part 2
common(H1,H2,H3) = Common =>
  Common1 = _,
  foreach(E in H1.keys)
    if H2.has_key(E), H3.has_key(E) then
      Common1 := E
    end
  end,
  Common = Common1.

make_hash(L) = Map =>
  Map = new_map(),
  foreach(E in L)
    Map.put(E,Map.get(E,0)+1)
  end.

alpha("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ").