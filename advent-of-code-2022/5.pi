/* 

  Advent Of Code 2022 - Day 5 in Picat.

  https://adventofcode.com/2022/day/5

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.

main => go.

go =>
  % File = "5_test.txt",
  File = "5.txt",
  Chars = read_file_chars(File),
  append(Starts,"\n\n",Procs, Chars),
  StartsLines = Starts.split("\n"),
  SLen = StartsLines.len - 1,

  % Init stack
  Transposed = transpose(StartsLines[1..SLen]),
  Stack = [],
  foreach({T,I} in zip(Transposed,1..Transposed.len), I mod 4 == 2)
    Stack := Stack ++ [T.strip]
  end, 
  member(Part,1..2),
  % Process the procs
  foreach(Proc in Procs.split("\n"))
    P = split(Proc," "),
    [Num,From,To] = [ P[I].to_int : I in [2,4,6]],
    if Part == 1 then
      foreach(I in 1..Num)
         once(select(C,Stack[From],StackFromRest)),
         Stack[From] := StackFromRest,
         Stack[To] := [C] ++ Stack[To]
      end
    else
      C = Stack[From,1..Num],
      Stack[From] := Stack[From,Num+1..Stack[From].len],
      Stack[To] := C ++ Stack[To]      
    end
  end,
  println([S.first : S in Stack]),
  fail,  
  nl.
