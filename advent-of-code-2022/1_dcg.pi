/* 

  Advent of Code 2022 - Day 1 in Picat.

  https://adventofcode.com/2022/day/1
  
  See https://github.com/hakank/hakank/tree/master/advent-of-code-2022
  
  Using DCG's instead of regex to parse the file.

  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.
import v3_utils.

main => go.

go =>
  % File = "1_test_nl.txt",
  File = "1_nl.txt", % witb and ending "\n"
  Chars = read_file_chars(File),
  phrase(lines,Lines,Chars),
  Total = [Line.split("\n").map(to_int).sum : Line in Lines],
  println(Total.max),
  println(Total.sort_down.take(3).sum),
  nl.

%
% Split lines by "\n\n"
%
eol --> "\n".
line([])     --> eol.
line([E|Es]) --> [E], line(Es).

lines([Line|Lines]) --> line(Line), eol, lines(Lines).
lines([Line]) --> line(Line).
lines([]) --> [].


%
% Note: bp.phrase/2-3 does not work.
%

%
% From Clocksin & Mellish "Programming in Prolog Using the ISO Standard" 
% 5th edition, page 223
% Note: For more advanced usages of DCGs this will probably not work...
%
% phrase/2
phrase(P,L) :-
    Goal =.. [P,L,[]],
    call(Goal).

% phrase/3
phrase(P,P2,L) :-
    Goal =.. [P,P2,L,[]],
    call(Goal).
