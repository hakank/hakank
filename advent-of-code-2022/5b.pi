/* 

  Advent Of Code 2022 - Day 5 in Picat.

  https://adventofcode.com/2022/day/5

  This variant uses a stack structure: pop_n, push etc.
  
  This program was created by Hakan Kjellerstrand, hakank@gmail.com
  See also my Picat page: http://www.hakank.org/picat/

*/

import util.

main => go.

go => 
  % File = "5_test.txt",
  File = "5.txt",
  Chars = read_file_chars(File),
  append(Starts,"\n\n",Procs, Chars),
  StartsLines = Starts.split("\n"),

  % Init stack
  Transposed = transpose(StartsLines[1..StartsLines.len - 1]),
  Stack = [T.strip : {T,I} in zip(Transposed,1..Transposed.len), I mod 4 == 2],
  
  member(Part,1..2),
  foreach(Proc in Procs.split("\n"), P = split(Proc," "), [Num,From,To] = [ P[I].to_int : I in [2,4,6]])
    Stack[From] := pop_n(Stack[From],C,Num),
    Stack[To]   := push(Stack[To],cond(Part==1,C.reverse,C))
  end,
  println(Stack.map(top)),
  fail,
  
  nl.


% Functional
% push(L,E)
%  - push E to top of L
%  - returns the stack [E] ++ L
push(L,E) = E ++ L, list(E) => true. % If E is a list
push(L,E) = [E] ++ L. % E is an atom

% pop(L,E)
% - removes the first element of L: E
% - returns the rest 
pop(L,E) = Rest, not empty(L) =>
  L = [E|Rest].

% pop_n(L,E,N)
% - removes the first N elements of L: E
% - returns the rest 
pop_n(L,Es,N) = Rest, L.len >= N =>
  Es = new_list(N),
  once(append(Es,Rest,L)).

% Is the stack empty?
empty([]).

% Return the top element
top(L) = L.first.
