/*
   Urn puzzle in WebPPL

   From Berlin Bayesians
   https://app.slack.com/client/TFPMSKW3F/CFQHMRD6K/thread/CFQHMRD6K-1623812230.000500
   """
   Three urns, first blindly take one from the first and put in the second, 
   then blindly take one from the second and put in the third and then blindly pick 
   one from the third. How likely is it to pick a black one in the last step?

   [
     Urns

     1: white black black
     2: white white black
     3: white black

   ]
   """

   Output from this model (the colors of the balls are coded as 1: white and 2:black)
"""
Marginal:
    {"urn2b":[1,1,2,2],"urn3b":[1,2,2],"ball":2,"ball_black":true} : 0.22222222222222227
    {"urn2b":[1,1,2,2],"urn3b":[1,2,1],"ball":1,"ball_black":false} : 0.22222222222222227
    {"urn2b":[1,1,2,1],"urn3b":[1,2,1],"ball":1,"ball_black":false} : 0.1666666666666667
    {"urn2b":[1,1,2,2],"urn3b":[1,2,2],"ball":1,"ball_black":false} : 0.11111111111111113
    {"urn2b":[1,1,2,2],"urn3b":[1,2,1],"ball":2,"ball_black":true} : 0.11111111111111113
    {"urn2b":[1,1,2,1],"urn3b":[1,2,1],"ball":2,"ball_black":true} : 0.08333333333333337
    {"urn2b":[1,1,2,1],"urn3b":[1,2,2],"ball":2,"ball_black":true} : 0.05555555555555559
    {"urn2b":[1,1,2,1],"urn3b":[1,2,2],"ball":1,"ball_black":false} : 0.027777777777777794
Marginals:
urn2b
Marginal:
    [1,1,2,2] : 0.6666666666666666
    [1,1,2,1] : 0.33333333333333337
urn3b
Marginal:
    [1,2,1] : 0.5833333333333334
    [1,2,2] : 0.41666666666666663
ball
Marginal:
    1 : 0.5277777777777777
    2 : 0.47222222222222227
ball_black
Marginal:
    false : 0.5277777777777777
    true : 0.47222222222222227
"""

*/



var model = function() {
    var white = 1
    var black = 2

    var urn1 = [white,black,black]
    var urn2 = [white,white,black]
    var urn3 = [white,black]

    // From urn1 to urn2
    var urn2b = urn2.concat(uniformDraw(urn1))
    
    // From urn2b to urn3    
    var urn3b = urn3.concat(uniformDraw(urn2b))

    // Pick a random ball from urn3b
    var ball = uniformDraw(urn3b)
    
    return {
        urn2b:urn2b,
        urn3b:urn3b,
        ball:ball,
        ball_black:ball==black
    }
}



var d = Infer(model)
display(d)

exp_map(d,["urn2b","urn3b","ball","ball_black"])
