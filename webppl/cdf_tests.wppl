/*
  Test of CDFs

  In general for discrete distributions:
     dist_cdf(params,k) = sum(mapN(function(r) {dist(params,k)},k+1))

  See node_module/hakank_utils/distributions.wppl for the definitions.
*/

/* 
  Gaussian CDF

  Mathematica
  Table[{x, N@CDF[NormalDistribution[100, 15], x]}, {x, 0, 200, 10}] 
  {{0, 1.30839*10^-11}, 
   {10, 9.86588*10^-10}, 
   {20, 4.8213*10^-8}, 
   {30, 1.53063*10^-6}, 
   {40, 0.0000316712}, 
   {50, 0.00042906}, 
   {60, 0.00383038}, 
   {70, 0.0227501}, 
   {80, 0.0912112}, 
   {90, 0.252493}, 
   {100, 0.5}, 
   {110, 0.747507}, 
   {120, 0.908789}, 
   {130, 0.97725}, 
   {140, 0.99617}, 
   {150, 0.999571}, 
   {160, 0.999968}, 
   {170, 0.999998}, 
   {180, 1.}, 
   {190, 1.}, 
   {200, 1.}}

  gaussian_cdf(100,15,k):
  [ [ 0, 1.3154921596481017e-11 ],
    [ 10, 9.9012192888992e-10 ],
    [ 20, 4.831650235459506e-8 ],
    [ 30, 0.0000015323370770037315 ],
    [ 40, 0.00003168603606429343 ],
    [ 50, 0.00042911655281613337 ],
    [ 60, 0.003830425284343797 ],
    [ 70, 0.022750062887256395 ],
    [ 80, 0.09121128476945783 ],
    [ 90, 0.25249247216358117 ],
    [ 100, 0.5000000005 ],
    [ 110, 0.7475075278364188 ],
    [ 120, 0.9087887152305422 ],
    [ 130, 0.9772499371127437 ],
    [ 140, 0.9961695747156563 ],
    [ 150, 0.9995708834471839 ],
    [ 160, 0.9999683139639357 ],
    [ 170, 0.999998467662923 ],
    [ 180, 0.9999999516834976 ],
    [ 190, 0.999999999009878 ],
    [ 200, 0.9999999999868451 ] ]

  Quantiles:
  Table[{x, N@Quantile[NormalDistribution[100, 15], x]}, {x, qs}]
  -> 
  {{0.9, 119.223}, {0.99, 134.895}, {0.999, 146.353}, {0.9999, 155.785}}

  gaussian_quantile(100,15,0.9: 119.22327348316901
  gaussian_quantile(100,15,0.99: 134.89521811061263
  gaussian_quantile(100,15,0.999: 146.3534845925173
  gaussian_quantile(100,15,0.9999: 155.7852472818348

*/
console.log("\ngaussian_cdf(100,15,k):")
console.log(mapN(function(k) { return [k*10,gaussian_cdf(100,15,k*10)] }, 21))
console.log("gaussian_quantile(100,15,0.9:", gaussian_dist_quantile(100,15,0.9))
console.log("gaussian_quantile(100,15,0.99:", gaussian_dist_quantile(100,15,0.99))
console.log("gaussian_quantile(100,15,0.999:", gaussian_dist_quantile(100,15,0.999))
console.log("gaussian_quantile(100,15,0.9999:", gaussian_dist_quantile(100,15,0.9999))


/*
  Cauchy

  Mathematica:
  Table[{x, N@CDF[CauchyDistribution[1, 2], x]}, {x, 0, 200, 10}]
  -> 
  {{0, 0.352416}, 
   {10, 0.930396}, 
   {20, 0.966617}, 
   {30, 0.978082}, 
   {40, 0.983691}, 
   {50, 0.987015}, 
   {60, 0.989214}, 
   {70, 0.990776}, 
   {80, 0.991943}, 
   {90, 0.992848}, 
   {100, 0.99357}, 
   {110, 0.99416}, 
   {120, 0.994651}, 
   {130, 0.995065}, 
   {140, 0.99542}, 
   {150, 0.995728}, 
   {160, 0.995996}, 
   {170, 0.996233}, 
   {180, 0.996444}, 
   {190, 0.996632}, 
   {200, 0.996801}}

  cauchy_cdf(1,2,k):
  [ [ 0, 0.35241638234956674 ],
    [ 10, 0.9303955127269361 ],
    [ 20, 0.9666166335694749 ],
    [ 30, 0.978082298727569 ],
    [ 40, 0.983690703075438 ],
    [ 50, 0.987014967449312 ],
    [ 60, 0.9892139644949202 ],
    [ 70, 0.9907762090612067 ],
    [ 80, 0.9919432428281476 ],
    [ 90, 0.9928481725470831 ],
    [ 100, 0.993570371843725 ],
    [ 110, 0.9941601069469792 ],
    [ 120, 0.9946507576353544 ],
    [ 130, 0.995065358359779 ],
    [ 140, 0.9954203176619714 ],
    [ 150, 0.9957276406523443 ],
    [ 160, 0.9959963132082352 ],
    [ 170, 0.9962331949402705 ],
    [ 180, 0.9964436129470915 ],
    [ 190, 0.9966317671360148 ],
    [ 200, 0.9968010133708612 ] ]
  
  Quantiles:
  Mathematica: Table[{x, N@Quantile[CauchyDistribution[1, 2], x]}, {x, {0.9, 0.99, 0.999, 0.9999}}]
  {{0.9, 7.15537}, 
   {0.99, 64.641}, 
   {0.999, 637.618}, 
   {0.9999, 6367.2}}

  cauchy_quantile(1,2,0.9: 7.155367074350505
  cauchy_quantile(1,2,0.99: 64.6410319075477
  cauchy_quantile(1,2,0.999: 637.6176779710831
  cauchy_quantile(1,2,0.9999: 6367.197514233658

*/
console.log("\ncauchy_cdf(1,2,k):")
console.log(mapN(function(k) { return [k*10,cauchy_cdf(1,2,k*10)] }, 21))
console.log("cauchy_quantile(1,2,0.9:", cauchy_dist_quantile(1,2,0.9))
console.log("cauchy_quantile(1,2,0.99:", cauchy_dist_quantile(1,2,0.99))
console.log("cauchy_quantile(1,2,0.999:", cauchy_dist_quantile(1,2,0.999))
console.log("cauchy_quantile(1,2,0.9999:", cauchy_dist_quantile(1,2,0.9999))


/*
  Bernoulli
  Mathematica: Table[{x, N@CDF[BernoulliDistribution[0.3], x]}, {x, 0, 1, 0.1}]
  -> 
  {{0., 0.7}, 
   {0.1, 0.7}, 
   {0.2, 0.7}, 
   {0.3, 0.7}, 
   {0.4, 0.7}, 
   {0.5, 0.7}, 
   {0.6, 0.7}, 
   {0.7, 0.7}, 
   {0.8, 0.7}, 
   {0.9, 0.7}, 
   {1., 1.}}

  bernoulli_cdf(0.3,k):
  [ [ 0, 0.7 ],
    [ 0.1, 0.7 ],
    [ 0.2, 0.7 ],
    [ 0.3, 0.7 ],
    [ 0.4, 0.7 ],
    [ 0.5, 0.7 ],
    [ 0.6, 0.7 ],
    [ 0.7, 0.7 ],
    [ 0.8, 0.7 ],
    [ 0.9, 0.7 ],
    [ 1, 1 ] ]


*/
console.log("\nbernoulli_cdf(0.3,k):")
console.log(mapN(function(k) { return [k/10,bernoulli_cdf(0.3,k/10)] }, 11))


/*
  Binomial 
  Table[{x, N@CDF[BinomialDistribution[10, 0.5], x]}, {x, 1, 10}]
  -> 
  {{0, 0.000976563},
   {1, 0.0107422}, 
   {2, 0.0546875}, 
   {3, 0.171875}, 
   {4, 0.376953}, 
   {5, 0.623047}, 
   {6, 0.828125}, 
   {7, 0.945312}, 
   {8, 0.989258}, 
   {9, 0.999023}, 
   {10, 1.}}

  binomial_cdf(0.5,10,k):
  [ [ 0, 0.0009765625 ],
    [ 1, 0.010742187500000002 ],
    [ 2, 0.05468749999999999 ],
    [ 3, 0.17187500000000014 ],
    [ 4, 0.37695312500000033 ],
    [ 5, 0.6230468750000003 ],
    [ 6, 0.8281250000000006 ],
    [ 7, 0.9453125000000007 ],
    [ 8, 0.9892578125000007 ],
    [ 9, 0.9990234375000007 ],
    [ 10, 1.0000000000000007 ] ]

  Quantiles:
  Mathematica:
  Table[{x, N@Quantile[BinomialDistribution[10, 0.5], x]}, {x, qs}]
  -> {{0.9, 7.}, {0.99, 9.}, {0.999, 9.}, {0.9999, 10.}}

  binomial_quantile(0.5,10,0.9: 7
  binomial_quantile(0.5,10,0.99: 9
  binomial_quantile(0.5,10,0.999: 9
  binomial_quantile(0.5,10,0.9999: 10

*/
console.log("\nbinomial_cdf(0.5,10,k):")
console.log(mapN(function(k) { return [k,binomial_cdf(0.5,10,k)] }, 11))
console.log("binomial_quantile(0.5,10,0.9:", binomial_dist_quantile(0.5,10,0.9))
console.log("binomial_quantile(0.5,10,0.99:", binomial_dist_quantile(0.5,10,0.99))
console.log("binomial_quantile(0.5,10,0.999:", binomial_dist_quantile(0.5,10,0.999))
console.log("binomial_quantile(0.5,10,0.9999:", binomial_dist_quantile(0.5,10,0.9999))


/*
  Negative binomial

  Mathematica:
  Table[{x, N@CDF[NegativeBinomialDistribution[3, 0.7], x]}, {x, 0, 10}]
  -> 
  {{0, 0.343}, 
   {1, 0.6517}, 
   {2, 0.83692}, 
   {3, 0.92953}, 
   {4, 0.971205}, 
   {5, 0.988708}, 
   {6, 0.995709}, 
   {7, 0.99841}, 
   {8, 0.999422}, 
   {9, 0.999794}, 
   {10, 0.999927}}

  negative_binomial_cdf(3,0.7,3): 0.92953
  [ [ 0, 0.3429999999999999 ],
    [ 1, 0.6517 ],
    [ 2, 0.8369199999999999 ],
    [ 3, 0.92953 ],
    [ 4, 0.9712045 ],
    [ 5, 0.9887077899999999 ],
    [ 6, 0.9957091059999998 ],
    [ 7, 0.9984096136 ],
    [ 8, 0.9994223039499999 ],
    [ 9, 0.999793623745 ],
    [ 10, 0.9999272988712 ] ]

  Quantiles:
  Table[{x, N@Quantile[NegativeBinomialDistribution[3, 0.7], x]}, {x, qs}]
  {{0.9, 3.}, {0.99, 6.}, {0.999, 8.}, {0.9999, 10.}}

  negative_binomial_quantile(3,0.7,0.9): 3
  negative_binomial_quantile(3,0.7,0.99): 6
  negative_binomial_quantile(3,0.7,0.999): 8
  negative_binomial_quantile(3,0.7,0.9999): 10

*/

console.log("\nnegative_binomial_cdf(3,0.7,k)")
console.log(mapN(function(k) { return [k,negative_binomial_cdf(3,0.7,k)] }, 11))
console.log("negative_binomial_quantile(3,0.7,0.9):", negative_binomial_dist_quantile(3,0.7,0.9))
console.log("negative_binomial_quantile(3,0.7,0.99):", negative_binomial_dist_quantile(3,0.7,0.99))
console.log("negative_binomial_quantile(3,0.7,0.999):", negative_binomial_dist_quantile(3,0.7,0.999))
console.log("negative_binomial_quantile(3,0.7,0.9999):", negative_binomial_dist_quantile(3,0.7,0.9999))


/*
  Poisson

  Table[{x, N@CDF[PoissonDistribution[10], x]}, {x, 0, 10}]
  -> 
  {{0, 0.0000453999}, 
   {1, 0.000499399}, 
   {2, 0.0027694}, 
   {3, 0.0103361}, 
   {4, 0.0292527}, 
   {5, 0.067086}, 
   {6, 0.130141}, 
   {7, 0.220221}, 
   {8, 0.33282}, 
   {9, 0.45793}, 
   {10, 0.58304}}

  poisson_cdf(10,k)
  [ [ 0, 0.00004539992976248485 ],
    [ 1, 0.0004993992273873333 ],
    [ 2, 0.0027693957155115754 ],
    [ 3, 0.010336050675925716 ],
    [ 4, 0.02925268807696107 ],
    [ 5, 0.06708596287903179 ],
    [ 6, 0.13014142088248296 ],
    [ 7, 0.22022064660169893 ],
    [ 8, 0.3328196787507189 ],
    [ 9, 0.4579297144718522 ],
    [ 10, 0.5830397501929853 ] ]

  Quantiles:
  Table[{x, N@Quantile[PoissonDistribution[10], x]}, {x, qs}]
  ->
  {{0.9, 14.}, {0.99, 18.}, {0.999, 21.}, {0.9999, 24.}}

  poisson_quantile(10,0.9): 14
  poisson_quantile(10,0.99): 18
  poisson_quantile(10,0.999): 21
  poisson_quantile(10,0.9999): 24

*/ 
console.log("\npoisson_cdf(10,k)")
console.log(mapN(function(k) { return [k,poisson_cdf(10,k)] }, 11))
console.log("poisson_quantile(10,0.9):", poisson_dist_quantile(10,0.9))
console.log("poisson_quantile(10,0.99):", poisson_dist_quantile(10,0.99))
console.log("poisson_quantile(10,0.999):", poisson_dist_quantile(10,0.999))
console.log("poisson_quantile(10,0.9999):", poisson_dist_quantile(10,0.9999))


/*
  Hypergeometric

  Table[{x, N@CDF[HypergeometricDistribution[10, 40, 100], x]}, {x, 0, 10}]
  -> 
  {{0, 0.00435544}, 
   {1, 0.0385158}, 
   {2, 0.153807}, 
   {3, 0.374238}, 
   {4, 0.63855}, 
   {5, 0.846156}, 
   {6, 0.954284}, 
   {7, 0.99114}, 
   {8, 0.999003}, 
   {9, 0.999951}, 
   {10, 1.}}

  hypergeometric_cdf(10,40,100,k)
  [ [ 0, 0.0043554407710458916 ],
    [ 1, 0.03851576054395484 ],
    [ 2, 0.15380683977752255 ],
    [ 3, 0.37423758246308597 ],
    [ 4, 0.6385503711462385 ],
    [ 5, 0.8461560524391872 ],
    [ 6, 0.9542840114459313 ],
    [ 7, 0.9911396566211624 ],
    [ 8, 0.9990032533288088 ],
    [ 9, 0.9999510314630639 ],
    [ 10, 1.0000000000000004 ] ]

   Quantiles:
   Table[{x, N@Quantile[HypergeometricDistribution[10, 40, 100], x]}, {x,qs}]
   -> 
   {{0.9, 6.}, 
    {0.99, 7.}, 
    {0.999, 8.}, 
    {0.9999, 9.}}


  hypergeometric_quantile(100,40,10,0.9) 6
  hypergeometric_quantile(100,40,10,0.99) 7
  hypergeometric_quantile(100,40,10,0.999) 8
  hypergeometric_quantile(100,40,10,0.9999) 9

  hypergeometric2_quantile(10,40,100,0.9) 6
  hypergeometric2_quantile(10,40,100,0.99) 7
  hypergeometric2_quantile(10,40,100,0.999) 8
  hypergeometric2_quantile(10,40,100,0.9999) 9


*/
console.log("\nhypergeometric_cdf(100,40,10,k)")
console.log(mapN(function(k) { return [k,hypergeometric_cdf(100,40,10,k)] }, 11))
console.log("hypergeometric_quantile(100,40,10,0.9)", hypergeometric_dist_quantile(100,40,10,0.9))
console.log("hypergeometric_quantile(100,40,10,0.99)", hypergeometric_dist_quantile(100,40,10,0.99))
console.log("hypergeometric_quantile(100,40,10,0.999)", hypergeometric_dist_quantile(100,40,10,0.999))
console.log("hypergeometric_quantile(100,40,10,0.9999)", hypergeometric_dist_quantile(100,40,10,0.9999))

console.log("\nhypergeometric2_cdf(10,40,100,k)")
console.log(mapN(function(k) { return [k,hypergeometric2_cdf(10,40,100,k)] }, 11))

console.log("hypergeometric2_quantile(10,40,100,0.9)", hypergeometric2_dist_quantile(10,40,100,0.9))
console.log("hypergeometric2_quantile(10,40,100,0.99)", hypergeometric2_dist_quantile(10,40,100,0.99))
console.log("hypergeometric2_quantile(10,40,100,0.999)", hypergeometric2_dist_quantile(10,40,100,0.999))
console.log("hypergeometric2_quantile(10,40,100,0.9999)", hypergeometric2_dist_quantile(10,40,100,0.9999))


/*
  Geometric
  
  Table[{x, N@CDF[GeometricDistribution[0.3], x]}, {x, 0, 10}]
  ->
  {{0, 0.3}, 
   {1, 0.51}, 
   {2, 0.657}, 
   {3, 0.7599}, 
   {4, 0.83193}, 
   {5, 0.882351}, 
   {6, 0.917646}, 
   {7, 0.942352}, 
   {8, 0.959646}, 
   {9, 0.971752}, 
   {10, 0.980227}}

  geometric_cdf(0.3,k)
  [ [ 0, 0.3 ],
    [ 1, 0.51 ],
    [ 2, 0.657 ],
    [ 3, 0.7599 ],
    [ 4, 0.8319299999999998 ],
    [ 5, 0.8823509999999999 ],
    [ 6, 0.9176456999999998 ],
    [ 7, 0.9423519899999999 ],
    [ 8, 0.9596463929999999 ],
    [ 9, 0.9717524750999997 ],
    [ 10, 0.9802267325699998 ] ]

  Quantiles
  Table[{x, N@Quantile[GeometricDistribution[0.3], x]}, {x, qs}]
  -> {{0.9, 6.}, {0.99, 12.}, {0.999, 19.}, {0.9999, 25.}}

  geometric_quantile(10,0.9): 6
  geometric_quantile(10,0.99): 12
  geometric_quantile(10,0.999): 19
  geometric_quantile(10,0.9999): 25

*/
console.log("\ngeometric_cdf(0.3,k)")
console.log(mapN(function(k) { return [k,geometric_cdf(0.3,k)] }, 11))
console.log("geometric_quantile(10,0.9):", geometric_dist_quantile(0.3,0.9))
console.log("geometric_quantile(10,0.99):", geometric_dist_quantile(0.3,0.99))
console.log("geometric_quantile(10,0.999):", geometric_dist_quantile(0.3,0.999))
console.log("geometric_quantile(10,0.9999):", geometric_dist_quantile(0.3,0.9999))

/*
  Exponential

  Mathematica: Table[{x, N@CDF[ExponentialDistribution[1/10], x]}, {x, 0, 10}]
  {{0, 0.}, 
   {1, 0.0951626}, 
   {2, 0.181269}, 
   {3, 0.259182}, 
   {4, 0.32968}, 
   {5, 0.393469}, 
   {6, 0.451188}, 
   {7, 0.503415}, 
   {8, 0.550671}, 
   {9, 0.59343}, 
   {10, 0.632121}}

  exponential_cdf(1/10,k)
  [ [ 0, 0 ],
    [ 1, 0.09516258196404048 ],
    [ 2, 0.18126924692201818 ],
    [ 3, 0.25918177931828223 ],
    [ 4, 0.3296799539643607 ],
    [ 5, 0.3934693402873666 ],
    [ 6, 0.4511883639059736 ],
    [ 7, 0.5034146962085906 ],
    [ 8, 0.5506710358827784 ],
    [ 9, 0.5934303402594009 ],
    [ 10, 0.6321205588285577 ] ]


  Quantiles:
  Table[{x, N@Quantile[ExponentialDistribution[1/10], x]}, {x, qs}]
  -> {{0.9, 23.0259}, {0.99, 46.0517}, {0.999, 69.0776}, {0.9999, 92.1034}}

  exponential_quantile(1/10,0.9): 23.025850929940457
  exponential_quantile(1/10,0.99): 46.0517018598809
  exponential_quantile(1/10,0.999): 69.07755278982135
  exponential_quantile(1/10,0.9999): 92.10340371976294

*/
console.log("\nexponential_cdf(1/10,k)")
console.log(mapN(function(k) { return [k,exponential_cdf(1/10,k)] }, 11))
console.log("exponential_quantile(1/10,0.9):", exponential_dist_quantile(1/10,0.9))
console.log("exponential_quantile(1/10,0.99):", exponential_dist_quantile(1/10,0.99))
console.log("exponential_quantile(1/10,0.999):", exponential_dist_quantile(1/10,0.999))
console.log("exponential_quantile(1/10,0.9999):", exponential_dist_quantile(1/10,0.9999))



/* 

  See beta_binomial_dist.wppl for the origin of these values.

  Mathematica:
  Table[{x, N@CDF[BetaBinomialDistribution[34, 31, 12], x]}, {x, 0, 12}]
  {{0, 0.000356459}, 
   {1, 0.0038192}, 
   {2, 0.0200772}, 
   {3, 0.0688513}, 
   {4, 0.172965}, 
   {5, 0.339547}, 
   {6, 0.544398}, 
   {7, 0.739494}, 
   {8, 0.882333}, 
   {9, 0.960754}, 
   {10, 0.991409}, 
   {11, 0.999073}, 
   {12, 1.}}

beta_binomial_cdf(12, 34,31, 0 ): 0.0003564591123854593
beta_binomial_cdf(12, 34,31, 1 ): 0.003819204775558493
beta_binomial_cdf(12, 34,31, 2 ): 0.020077217950212365
beta_binomial_cdf(12, 34,31, 3 ): 0.06885125747417399
beta_binomial_cdf(12, 34,31, 4 ): 0.1729650726118613
beta_binomial_cdf(12, 34,31, 5 ): 0.33954717683216107
beta_binomial_cdf(12, 34,31, 6 ): 0.5443981428327999
beta_binomial_cdf(12, 34,31, 7 ): 0.7394943009286464
beta_binomial_cdf(12, 34,31, 8 ): 0.882332559534534
beta_binomial_cdf(12, 34,31, 9 ): 0.9607535642593351
beta_binomial_cdf(12, 34,31, 10 ): 0.9914090479244846
beta_binomial_cdf(12, 34,31, 11 ): 0.999072918840772
beta_binomial_cdf(12, 34,31, 12 ): 1.0000000000000002

*/
console.log("\nbeta_binomial_cdf(12, 34,31,x")
var t = mapN(function(x) {
    console.log([x,beta_binomial_cdf(12, 34,31 ,x)])},13)

// Mathematica BetaNomialDistribution:
// """
// The probability of more than 50 successes in 100 trials assuming a beta distribution on p:
// 1 - CDF[BetaBinomialDistribution[4, 5, 100], 50]
// -> 0.357944
// """
console.log("\n1-beta_binomial_cdf(4, 5,100,50):",1-beta_binomial_cdf(100,4, 5,50))

// No quantile for beta_binonial


/*
  Zipf distribution

  Table[{x, CDF[ZipfDistribution[15, 0.3], x]}, {x, 1, 15}]
  -> 
  {{1, 0.40531}, {2, 0.569918}, {3, 0.667087}, {4, 0.733938}, {5, 
  0.783956}, {6, 0.823419}, {7, 0.855716}, {8, 0.882866}, {9, 
  0.906162}, {10, 0.926476}, {11, 0.944422}, {12, 0.960449}, {13, 
  0.974892}, {14, 0.988009}, {15, 1.}}

  zipf_cdf(15,0.3,x)
  [ 1, 0.4053103525580217 ]
  [ 2, 0.5699175051246437 ]
  [ 3, 0.6670870269657676 ]
  [ 4, 0.7339383040305751 ]
  [ 5, 0.783956346518432 ]
  [ 6, 0.8234194350025533 ]
  [ 7, 0.8557162908235442 ]
  [ 8, 0.8828663458212265 ]
  [ 9, 0.9061618671797169 ]
  [ 10, 0.9264755046156218 ]
  [ 11, 0.9444218989428403 ]
  [ 12, 0.9604488930372632 ]
  [ 13, 0.9748920236522574 ]
  [ 14, 0.9880086229199431 ]
  [ 15, 1 ]
  
  Quantiles:
  Table[{x, Quantile[ZipfDistribution[15, 0.3], x]}, {x, {0.1, 0.5, 0.9, 0.99, 0.999, 0.9999}}]
  -> {{0.1, 1}, {0.5, 2}, {0.9, 9}, {0.99, 15}, {0.999, 15}, {0.9999, 15}}

  zipf_quantile(15,0.3,0.1): 1
  zipf_quantile(15,0.3,0.5): 2
  zipf_quantile(15,0.3,0.9): 9
  zipf_quantile(15,0.3,0.99): 15
  zipf_quantile(15,0.3,0.999): 15
  zipf_quantile(15,0.3,0.9999): 15

*/
console.log("\nzipf_cdf(15,0.3,x)")
var t = mapN(function(x) {
    console.log([x+1,zipf_cdf(15,0.3,x+1)])} ,15)

console.log("zipf_quantile(15,0.3,0.1):", zipf_dist_quantile(15,0.3,0.1))
console.log("zipf_quantile(15,0.3,0.5):", zipf_dist_quantile(15,0.3,0.5))
console.log("zipf_quantile(15,0.3,0.9):", zipf_dist_quantile(15,0.3,0.9))
console.log("zipf_quantile(15,0.3,0.99):", zipf_dist_quantile(15,0.3,0.99))
console.log("zipf_quantile(15,0.3,0.999):", zipf_dist_quantile(15,0.3,0.999))
console.log("zipf_quantile(15,0.3,0.9999):", zipf_dist_quantile(15,0.3,0.9999))
