/*
  Monty Hall problem

  From the PyMC3 model in the talk
  "Carlo Revolution is Open Source: Probabilistic Programming with PyMC3?Austin Rochford"
  https://www.safaribooksonline.com/videos/open-data-science/9780135432792/9780135432792-ODSC_11
  Around time 9:00

  Which mean that if we selected d1 it will be 1/3 chance of being the price door.
  Changing to d3 would - however - give a 2/3 change of getting the price.

  Here I just test if one can learn parameters in categorical as well.
  And yes, one can! But it don't solve the Monty Hall problem....

  expectation:
  [ [ 'open', 2 ],
    [ 'prize', 2.32 ],
    [ 'a', 0.6411699218522728 ],
    [ 'b', 0.37009372286152364 ],
    [ 'c', 0.5152092594667019 ],
    [ 'd', 0.47687650632687717 ],
    [ 'e', 0.5756810737717005 ],
    [ 'f', 0.428379525505288 ] ]


  See ~/blog/monty_hall_test.blog

*/

var model = function() {

    // There are 3 doors.
    var d1 = 1;
    var d2 = 2;
    var d3 = 3;
    var doors = [d1,d2,d3];
    
    
    // The prize can be behind any door 1..3.
    var prize = uniformDraw(doors);
    
    // Which door will Monty open?
    // Assumption (WLOG): We always select door 1.
    var a = beta(2,2);
    var b = beta(2,2);
    var c = beta(2,2);
    var d = beta(2,2);
    var e = beta(2,2);
    var f = beta(2,2);

    var open = (function() {
        if (prize == d1) {
            return categorical({ps:[0,a,b],vs:doors})
        } else if (prize == d2) {
            return categorical({ps:[0,c,d],vs:doors})            
        } else {
            return categorical({ps:[0,e,f],vs:doors});
        }
    })();
    
    // This is simpler:
    // var open = (prize == d1) ? categorical({ps:[0.5,0.5], vs:[d2,d3]}) :
    //     (prize == d2 ? d3 : d2);
    
    // We see that Monty opens door 2.
    // Ensure that the sum of probs are ~ 1
    var check = a+b >= 0.96 && a+b < 1.05 && c+d >= 0.96 && c+d < 1.05 &&
       e + f >= 0.96 && e + f < 1.05 ? true : false;

    // var cc = a+b+c+d+e+f;
    // var check = cc >= 0.96 && c <= 1.02? true : false;


    condition(open == d2);
    condition(check);

    
    // What are the probabilities that the price is behind
    // - door d1 (the one we selected, i.e don't switch)
    // - or door d3 (i.e. switch door)
    return {
        open:open,
        prize:prize,
        a:a,
        b:b,
        c:c,
        d:d,
        e:e,
        f:f
    };

}

var d = Infer(model);

display("We select door 1. Monty opens door 2. Should we change to door 3?");
// display(d);


// exp_map(d,["open","prize","d1","d2","d3"]);
exp_map_all(d);
