/*

  From
  https://mathematica.stackexchange.com/questions/128945/problems-encoding-a-bayesian-network-with-just-five-nodes-using-probabilitydistr

  Example is from "page 53 in Probabilistic Graphical Models (2009), by Daphne Koller and Neir Friedman:"

  """                                                                                                                                            
  The network has five nodes (random variables):
                                                                                                                                              
  Difficulty of a class taken by a student (0 = easy, 1 = hard)
  Intelligence of the student (0 = low, 1 = high)
  Grade achieved by the student (1 = A, 2 = B, 3 = C)
  SAT score of the student (0 = low, 1 = high)
  Letter of recommendation by the teacher (0 = False, 1 = True)
  We would like to use this network to do probabilistic inference (causal or evidential) like:                                                   
  "What is the probability of the student achieving an A, given that he is intelligent?"
  """

  Marginals:
  grade
  Marginal:
    "grade_a" : 0.6485698815135684
    "grade_b" : 0.3444706332016819
    "grade_c" : 0.0069594852847496575
  intelligence
  Marginal:
    "intelligence_low" : 0.5415100649764302
    "intelligence_high" : 0.4584899350235698
  difficulty
  Marginal:
    "difficulty_easy" : 0.7364313925340809
    "difficulty_hard" : 0.26356860746591915
  sat
  Marginal:
    "sat_low" : 0.6061325487323226
    "sat_high" : 0.39386745126767736
  letter
  Marginal:
    true : 1

  expectation:
  [ [ 'grade', NaN ],
    [ 'intelligence', NaN ],
    [ 'difficulty', NaN ],
    [ 'sat', NaN ],
    [ 'letter', 1 ] ]

  MAP:
  [ [ 'grade', { val: 'grade_a', score: -0.432985522336404 } ],
    [ 'intelligence',
      { val: 'intelligence_low', score: -0.6133936254997411 } ],
    [ 'difficulty',
      { val: 'difficulty_easy', score: -0.3059392008006012 } ],
    [ 'sat', { val: 'sat_low', score: -0.5006565895490864 } ],
    [ 'letter', { val: true, score: 0 } ] ]


  Cf ~/blog/intelligence_test.blog

*/

var model = function() {

    var difficulty = categorical({ps:[0.6,0.4],vs:["difficulty_easy","difficulty_hard"]});
        
    var intelligence = categorical({ps:[0.7,0.3],vs:["intelligence_low", "intelligence_high"]});
    
        var grades = ["grade_a","grade_b","grade_c"];
    var grade =
        (intelligence == "intelligence_low" && difficulty=="difficulty_easy")  ? categorical({ps:[0.3 , 0.4 , 0.3 ],vs:grades}) : 
        (intelligence == "intelligence_low" && difficulty=="difficulty_hard")  ? categorical({ps:[0.05, 0.25, 0.7 ],vs:grades}) :
        (intelligence == "intelligence_high" && difficulty=="difficulty_easy") ? categorical({ps:[0.9 , 0.08, 0.02],vs:grades}):
        (intelligence == "intelligence_high" && difficulty=="difficulty_hard") ? categorical({ps:[0.5 , 0.3 , 0.2 ],vs:grades}) : "grade_xxx";
    

    // receives a Letter of recommendation
    var letter =
        (grade == "grade_a") ? flip(0.9) : 
        (grade == "grade_b") ? flip(0.6) :
        (grade == "grade_c") ? flip(0.01) : false;
    
    
    var sat =
        (intelligence == "intelligence_high") ? categorical({ps:[0.8,0.2],vs:["sat_high","sat_low"]}) :
        categorical({ps:[0.05,0.95],vs:["sat_high", "sat_low"]});
    
    
    // What is the probability of the student achieving an A, given that he is intelligent?
   
    // condition(sat == "sat_high");
    // condition(letter == false);
    condition(letter == true);
    // condition(grade == "grade_a");
    // condition(intelligence == "intelligence_high");

    return {
        grade:grade,
        intelligence:intelligence,
        difficulty:difficulty,
        sat:sat,
        letter:letter,
    }

}

var d = Infer(model);
// display(d);
    
exp_map_all(d);

// To complex with all the variables:
// Error: viz.auto() doesn't know how to render objects of kind ccccc
// With only grade, intelligence,difficulty it works
// viz(d)
