/*
  Lotto Problem
  
  From some unknown source (but I quoted it here: http://www.hakank.org/sims/simulering.html)
  """
  One day I was asked 
  
  What is the probability that no two numbers are consecutive in
  a lottery draw?
  
  Information:

  National Lottery in UK is to draw 6 different numbers from 1 to 49.
  so, for example,

    (a)   1  4  7   12  19  44    - no consecutive numbers
    (b)   3  6  17  18  44  46    - 17 and 18 are consecutive 
    (c)   1  2  3   17  29  49    - 1, 2 and 3 are consecutive

  We are asking the probability that class (a) occurs. Hope this is clear.

  Observation shows that it is NOT a small number (actually near half-and-half).
  ......

  A Monte Carlo simulation experiment produced 50,558 sets of six numbers 
  between 1 and 49 with none consecutive out of 100,000 trials giving an 
  estimated probability of .50558.
  """

  Enumerate takes too long (> 10 minutes) so I use rejection.

  * Using rejection
  Marginals:
  s
  Marginal:
    0 : 0.5064
    1 : 0.38581
    2 : 0.09805
    3 : 0.009320000000000004
    4 : 0.00041
    5 : 0.000009999999999999999
  prob
  Marginal:
    true : 0.5064
    false : 0.49360000000000004

  expectation:
  [ [ 's', 0.61156 ], [ 'prob', 0.5064 ] ]


*/


var model = function() {
    var n = 49
    var m = 6

    var a = _.range(1,n+1) // 1..n
    // The selected Lotto numbers
    var lotto = sort(draw_without_replacement(m,a,[]))

    // Are there any consecutive numbers?
    // var s = sum(mapN(function(i) {
    //     sum(mapN(function(j) {
    //         if (i < j) {
    //             return Math.abs(lotto[i]-lotto[j]) == 1 ? 1 : 0
    //         } else {
    //             return 0
    //         }
    //     },m))
    // },m))

    // Simpler version (requires sorted lotto numbers)
    var s = sum(mapN(function(i) { return lotto[i+1]-lotto[i] == 1 ? 1 : 0 }, m-1))

    // Probability of not getting any consecutive numbers
    var prob = s == 0
    
    return {
        s:s,
        prob:prob
    }
}

// var d = Infer({method:"enumerate",maxRuntimeInMS:600000},model) // No result in 600s
var d = Infer({method:"rejection",samples:100000,incremental:true},model) 

exp_map(d,["s","prob"],["expectation","marginals"])
