/*
  This is a port of the SPPL model trueskill-poisson-binomial.pynb

  * Prior (forward)
    result
    Marginal:
      0 : 0.5188999999999995
      1 : 0.4811000000000005

    expectation:
    [ [ 'perfB1', 89.95009999999995 ],
      [ 'skillA', 100.16360000000009 ],
      [ 'perfA1', 90.14980000000006 ],
      [ 'result', 0.4811000000000005 ] ]

  * condition(result == 0)
    expectation:
    [ [ 'perfB1', 90.7151 ],
      [ 'skillA', 92.93760000000002 ],
      [ 'perfA1', 83.04649999999998 ],
      [ 'result', 0 ] ]


*/

var model = function() {
    var perfB1 = binomial(0.9,100)
    condition(80 <= perfB1)

    var skillA = poisson(100)
    condition(skillA >= 77 && skillA < 125)
    
    var perfA1 = binomial(0.9,skillA)

    var result = perfA1 > perfB1 ? 1 : 0
    
    condition(result == 0)

    return {
        perfB1:perfB1,
        skillA:skillA,
        perfA1:perfA1,
        result:result
    }
    
}

var d = Infer({method:"forward",samples:10000},model) // prior
// var d = Infer({method:"MCMC",samples:10000},model)
// var d = Infer({method:"SMC",particles:10000},model) 
// display(d)

exp_map(d,["perfB1","skillA","perfA1","result"])
