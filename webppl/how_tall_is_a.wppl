/*
  https://www.allendowney.com/blog/2018/10/18/how-tall-is-a/
  """
  Here are a series of problems I posed in my Bayesian statistics class:

  1) Suppose you meet an adult resident of the U.S. who is 170 cm tall. 
     What is the probability that they are male?

  2) Suppose I choose two U.S. residents at random and A is taller than B.  
     How tall is A?

  3) In a room of 10 randomly chosen U.S. residents, A is the second tallest.  
     How tall is A?  
     And what is the probability that A is male?

  As background: For adult male residents of the US, the mean and standard deviation of 
  height are 178 cm and 7.7 cm. For adult female residents the corresponding stats 
  are 163 cm and 7.3 cm.  And 51% of the adult population is female.

  """

  Cf ~/blog/how_tall_is_a.blog

*/

/*
  Model 1:

  1) Suppose you meet an adult resident of the U.S. who is 170 cm tall. 
  What is the probability that they are male?
  
  According to https://www.allendowney.com/blog/2018/10/18/how-tall-is-a/
    female 0.5432225483131837
    male 0.45677745168681627

  This model:
  Marginal:
    {"gender":"female"} : 0.5432225483131837
    {"gender":"male"} : 0.4567774516868164
*/
var model1 = function() {
   
    var gender = categorical({ps:[0.49,0.51],vs:["male", "female"]});
    var height = function() {
        if (gender == "male") {
            return Gaussian({mu:178,sigma:7.7});
        } else {
            return Gaussian({mu:163,sigma:7.3});
        }
    }
    // Alternative:
    // var height_params = gender == "male" ? {mu:178,sigma:7.7} : {mu:163,sigma:7.3};
    // observe(Gaussian(height_params), 170);
    
    observe(height(0), 170);
    
    return {gender:gender };
}

display("Model 1:");
var d1 = Infer(model1);
display(d1);


/*
  2) Suppose I choose two U.S. residents at random and A is taller than B.  
  How tall is A?

  Solution from https://www.allendowney.com/blog/2018/10/18/how-tall-is-a/
  A: 176.67506663725212
  B: 164.05298129722925

  This model:

  method:rejection (samples(10000)
  height0: 177.8851294362736
  height1: 163.07234312719254

  method:SMC particles:100000
  height0: 177.95965720045015
  height1: 163.04298389502762

  method:MCMC samples:100000 kernel:MH
  height0: 178.04794828673155
  height1: 162.96121142888668


*/
var model2 = function() {

    var gender = mem(function(p) {
        return categorical({ps:[0.49,0.51],vs:["male", "female"]});
    })
    var height = mem(function(p) {
        if (gender(p) == "male") {
            return Gaussian({mu:178,sigma:7.7});
        } else {
            return Gaussian({mu:163,sigma:7.3});
        }
    })
    
    condition(sample(height(0)) > sample(height(1)));
    return {
        height0:sample(height(0)),
        height1:sample(height(1))
    };
    
}

display("\nModel 2:");
// var d2 = Infer(model2);
// var d2 = Infer({method:"rejection",samples:10000},model2);
// var d2 = Infer({method:"SMC",particles:100000},model2);
var d2 = Infer({method:"MCMC",kernel:"MH",samples:100000},model2);
// display(d2);

exp_map(d2,["height0","height1"],["expectation"]);


/*
  3) In a room of 10 randomly chosen U.S. residents, A is the second tallest.  
  How tall is A?  
  And what is the probability that A is male?
  
    Solution from https://www.allendowney.com/blog/2018/10/18/how-tall-is-a/
    A: 181.60660153115973
  
  This model:
  expectation:
[ [ 'height0', 186.60592552583253 ],
  [ 'height1', 181.28284549675485 ],
  [ 'height2', 166.66277223222477 ],
  [ 'height3', 166.68998620065165 ],
  [ 'height4', 167.0725475310291 ],
  [ 'height5', 166.91497092146895 ],
  [ 'height6', 166.78589892886495 ],
  [ 'height7', 167.3351423522965 ],
  [ 'height8', 167.04750091314153 ],
  [ 'height9', 166.68921299146115 ] ]
  
*/
var model3 = function() {
    var gender = mem(function(p) {
        return categorical({ps:[0.49,0.51],vs:["male", "female"]});
    })
    var height = mem(function(p) {
        if (gender(p) == "male") {
            return gaussian(178,7.7);
        } else {
            return gaussian(163,7.3);
        }
    })
    
    condition(height(0) > height(1)); // A(=1) is second tallest    
    condition(height(1) > height(2)); // 1 is taller than anyone else
    condition(height(1) > height(3));
    condition(height(1) > height(4));
    condition(height(1) > height(5));
    condition(height(1) > height(6));
    condition(height(1) > height(7));
    condition(height(1) > height(8));
    condition(height(1) > height(9));
    
    return {
        height0:height(0),
        height1:height(1),
        height2:height(2),
        height3:height(3),
        height4:height(4),
        height5:height(5),
        height6:height(6),
        height7:height(7),
        height8:height(8),
        height9:height(9),        
        
        gender0:gender(0),
        gender1:gender(1),
    }


}

display("\nModel 3:");
// The following methods are available:
//   SMC, MCMC, PMCMC, asyncPF, rejection, enumerate, incrementalMH, forward, optimize, AIS, defaultInfer.
// var d3 = Infer(model3);
var d3 = Infer({method:"rejection",samples:1000},model3);
// var d3 = Infer({method:"SMC",particles:10000,rejuvKernel:"HMC"},model3);
// var d3 = Infer({method:"MCMC",kernel:"MH",samples:10000,verbose:true},model3);
// var d3 = Infer({method:"MCMC",kernel:"HMC",samples:100,lag:10,verbose:true},model3);
// var d3 = Infer({method:"MCMC"},model3);
// var d3 = Infer({method:"PMCMC",kernel:"MH",samples:10000,burn:1000},model3);
// var d3 = Infer({method:"incrementalMH",samples:100,lag:10,verbose:true},model3);
// var d3 = Infer({method:"asyncPF",numparticles:100000000,bufferSize:10000},model3); // Fast but strange result
// var d3 = Infer({method:"AIS",numparticles:100000},model3);
// var d3 = Infer({method:"defaultInfer"},model3);
// var d3 = Infer({method:"optimize"},model3);
// display(d3);

exp_map(d3,["height0","height1","height2","height3","height4","height5","height6",
            "height7","height8","height9"
            // ,"gender0","gender1"
           ],["expectation"]);


display(map(function(a) {display(a);display(marginalize(d3, a)) }, ["gender0","gender1"]));


/*
  Model 4:

  This is a variant of model 3 in which all people are sorted according to height. 
  Does this make any difference?

  This takes much longer than model3 since ensuring ordering all people take a lot of 
  time.
  I changed from Rejection to MCMC/MH but it still takes a lot of time 
  (in total 6min 45.27s).
  
  The height of A and B are not very different from A and B in model 3.

  expectation:
   [ [ 'height0', 185.52958008983265 ],
     [ 'height1', 179.49032971903182 ],
     [ 'height2', 174.94869363122393 ],
     [ 'height3', 171.33820858967897 ],
     [ 'height4', 168.38261105994934 ],
     [ 'height5', 165.3543493064635 ],
     [ 'height6', 162.57518924558252 ],
     [ 'height7', 159.9171887796864 ],
     [ 'height8', 157.6529497545641 ],
     [ 'height9', 153.91087486647763 ] ]
  gender0
  Marginal:
    "male" : 0.9390000000000002
    "female" : 0.060999999999999804
  gender1
  Marginal:
    "male" : 0.8839
    "female" : 0.11609999999999984

  Since it takes so long to run, and the sorting does not really add anything
  I skip running this model.

*/
var model4 = function() {
    var gender = mem(function(p) {
        return categorical({ps:[0.49,0.51],vs:["male", "female"]});
    })
    var height = mem(function(p) {
        if (gender(p) == "male") {
            return gaussian(178,7.7);
        } else {
            return gaussian(163,7.3);
        }
    })
    
    condition(height(0) > height(1)); // A(=1) is second tallest    
    condition(height(1) > height(2)); // 1 is taller than anyone else
    condition(height(2) > height(3)); // now we order all people according to height
    condition(height(3) > height(4));
    condition(height(4) > height(5));
    condition(height(5) > height(6));
    condition(height(6) > height(7));
    condition(height(7) > height(8));
    condition(height(8) > height(9));
    
    return {
        height0:height(0),
        height1:height(1),
        height2:height(2),
        height3:height(3),
        height4:height(4),
        height5:height(5),
        height6:height(6),
        height7:height(7),
        height8:height(8),
        height9:height(9),        
        
        gender0:gender(0),
        gender1:gender(1),
    }


}
/*
display("\nModel 4:");
// The following methods are available:
//   SMC, MCMC, PMCMC, asyncPF, rejection, enumerate, incrementalMH, forward, optimize, AIS, defaultInfer.
// var d3 = Infer(model4);
// var d4 = Infer({method:"rejection",samples:1000},model4);
// var d4 = Infer({method:"SMC",particles:10000,rejuvKernel:"HMC"},model4);
var d4 = Infer({method:"MCMC",kernel:"MH",samples:10000,verbose:true},model4);
// var d4 = Infer({method:"MCMC",kernel:"HMC",samples:100,lag:10,verbose:true},model4);
// var d4 = Infer({method:"MCMC"},model4);
// var d4 = Infer({method:"PMCMC",kernel:"MH",samples:10000,burn:1000},model4);
// var d4 = Infer({method:"incrementalMH",samples:100,lag:10,verbose:true},model4);
// var d4 = Infer({method:"asyncPF",numparticles:100000000,bufferSize:10000},model4); // Fast but strange result
// var d4 = Infer({method:"AIS",numparticles:100000},model4);
// var d4 = Infer({method:"defaultInfer"},model4);
// var d4 = Infer({method:"optimize"},model4);
// display(d4);

exp_map(d4,["height0","height1","height2","height3","height4","height5","height6",
            "height7","height8","height9"
            // ,"gender0","gender1"
           ],["expectation"]);

display(map(function(a) {display(a);display(marginalize(d4, a)) }, ["gender0","gender1"]));
*/

