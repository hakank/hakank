/*
   Handedness

   From infer.net test/Tests/BlogTests.cs
   """
   probRightHandedActual: Beta(7.72,3.08)[mean=0.7148]
   """

   cf ~/blog/handedness.blog
   From
   /home/hakank/probabilistic_programming/infer.net/Practical/Handedness/Handedness.cs


  Note: It's a little confusing since the Infer.net program includes different experiments.

  Here are some of the experiments in this WebPPL model:

  With 
    var betaA = uniform(0,len);
    var betaB = uniform(0,len);    
    var prob = beta(betaA, betaB);

  then we get the following

   betaAExpected
   Marginal:
    7.72 : 1
   betaBExpected
   Marginal:
    3.08 : 1
  expectation:
  [ [ 'betaA', 6.3499954530776614 ],
    [ 'betaB', 4.542174946552413 ],
    [ 'prob', 0.6430452809630459 ],
    [ 'probExpected', 0.7125705680209204 ],
    [ 'betaAExpected', 7.72 ],
    [ 'betaBExpected', 3.08 ] ]

  With 
    var prob = beta(7,72, 3.08);

  we get:
  [ 'prob', 0.7103383866891797 ],
  [ 'probExpected', 0.7156012619682018 ],

  And with 
     var prob = beta(7.72, 3.08);

   [ 'prob', 0.7073649358707802 ],
   [ 'probExpected', 0.7134081311681398 ],
 

*/

var model = function() {

    var studentData = [false, true, true, true, true, true, true, true, false, false];
    var lecturerData = [false, true, true, true, true, true, true, true, true, true];
    
    var data = studentData;
    var len = data.length;

    var betaA = uniform(0,len);
    var betaB = uniform(0,len);    
    var prob = beta(betaA, betaB);

    // Note: This is from one experiment. 
    // var prob = beta(0.72, 0.08);

    // And this is from another experiment
    var probExpected = beta(7.72, 3.08);
    // var prob = beta(7.72, 3.08);
    
    var isRightHanded = function(student) {
        return flip(prob);
        // return flip(0.9);
    }

    mapN(function(i) {
        condition(isRightHanded(i) == data[i])
    },len);
        
    return {
        betaA:betaA,
        betaB:betaB,
        prob:prob,
        probExpected:probExpected,
        betaAExpected:7.72,
        betaBExpected:3.08
    }

}

// var d = Infer(model);
// var d = Infer({method:"SMC",particles:10000},model);
// var d = Infer({method:"MCMC",kernel:"MH",samples:1000,lag:10},model);
var d = Infer({method:"MCMC",kernel:"MH",samples:100000},model);
// display(d);

exp_map_all(d,["expectation","MAP"]);
// exp_map(d,["prob","probExpected","betaAExpected","betaBExpected"]);

// with betA, betaB and prob
// viz(d) // this shows a very cluttered line graph
// viz(getSamples(d,"prob"))
// With betaA and betaB: a nice bubble correlation plot with prob as size of the bubble is the probability
// viz(d)
