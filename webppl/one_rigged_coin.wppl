/*
   One rigged coin

   https://x.com/littmath/status/1827447490683003234
   """
   You have 10000 coins. 9999 of them are fair; one is rigged so that it always 
   lands on heads. You choose a coin at random and flip it 10 times; it’s heads 
   all ten times. The coin is probably
   - fair
   - rigged
   - equaly likely
   - can't tell/see results
   """

   For different n tosses with n heads
   
   n: 5
   Marginals:
   pick_coin
   Marginal:
     "fair_coin" : 0.996809889343037
     "biased_coin" : 0.0031901106569630624


   n: 10
   Marginals:
   pick_coin
   Marginal:
     "fair_coin" : 0.9071033294021685
     "biased_coin" : 0.09289667059783158


   n: 15
   Marginals:
   pick_coin
   Marginal:
     "biased_coin" : 0.7661982369583826
     "fair_coin" : 0.23380176304161732


   n: 20
   Marginals:
   pick_coin
   Marginal:
     "biased_coin" : 0.9905542828802861
     "fair_coin" : 0.00944571711971385


   n: 25
   Marginals:
   pick_coin
   Marginal:
     "biased_coin" : 0.9997020953520708
     "fair_coin" : 0.0002979046479292659


  Calculation (for n=10) from
  https://x.com/RRichtsfeld/status/1827476479048880528
  """
  Expected fair all heads: 9999/2^10
  Expected rigged all heads: 1
  Expected total all heads: 9999/2^10+1
  Conditional probability of fair all heads: (9999/2^10)/(9999/2^10+1)≈90.71%
  Conditional probability of rigged all heads: 1/(9999/2^10+1)≈9.29%
  """


*/

var run = function(n) {
    
    var model = function() {
        
        // var n = 15
        
        var biased_coin = function(i) {
            return "head"
        }
        
        var fair_coin =function(i) {
            return categorical({ps:[0.5,0.5],vs:["head","tail"]});        
        }
        
        var pick_coin = flip(9999.0/10000) ? "fair_coin"  : "biased_coin"
        
        var a = mapN(function(i) {
            if (pick_coin == "fair_coin") {
                return fair_coin(i)
            } else {
                return biased_coin(i)
            }
        }, n)
        
        mapN(function(i) {
            condition(a[i] == "head")
        },n)
        
        return {
            pick_coin:pick_coin,
        }
        
    }
    
    
    var d = Infer({method:"enumerate"},model);
    // var d = Infer({method:"rejection",samples:1000},model);
    // var d = Infer({method:"SMC",particles:10000},model);
    // var d = Infer({method:"MCMC",samples:10000},model);
    
    // display(d);
    
    exp_map_all(d,["marginals"])
    
}

var t = mapN(function(n1) {
    var n = (n1+1)*5
    console.log("\nn:",n)
    run(n)
},4)
