/*
    CUFP 2013: Avi Pfeffer: Functional Probabilistic Programming
    From https://www.youtube.com/watch?v=U67guma2H6s
    @3.56

    Brian ate pizza last night. Is he a programmer or a student?

    * Prior (before we know anything about Brian's eating habits)

      Marginals:
      student
      Marginal:
        true : 0.6999999999999998
        false : 0.30000000000000004
     programmer
     Marginal:
       false : 0.83
       true : 0.17
     programmer_or_student
     Marginal:
       true : 0.73
       false : 0.26999999999999996
     pizza
     Marginal:
       false : 0.6160000000000001
       true : 0.38399999999999995

     expectation:
     [ [ 'student', 0.6999999999999998 ],
       [ 'programmer', 0.17 ],
       [ 'programmer_or_student', 0.73 ],
       [ 'pizza', 0.38399999999999995 ] ]
  
   * Now we know that Brian ate pizza last night

     Marginals:
     student
     Marginal:
       true : 0.7656250000000001
       false : 0.23437499999999997
     programmer
     Marginal:
       false : 0.6484375
       true : 0.35156250000000006
     programmer_or_student
     Marginal:
       true : 0.7890625
       false : 0.21093749999999994
     pizza
     Marginal:
       true : 1

    expectation:
    [ [ 'student', 0.7656250000000001 ],
      [ 'programmer', 0.35156250000000006 ],
      [ 'programmer_or_student', 0.7890625 ],
      [ 'pizza', 1 ] ]

  So, Brian is probably a student, (the posterior is a little larger than the prior)

  What is we know that Brian did not ate pizza last night?
    Marginals:
    student
    Marginal:
      true : 0.6590909090909092
      false : 0.34090909090909094
    programmer
    Marginal:
      false : 0.9431818181818181
      true : 0.0568181818181818
    programmer_or_student
    Marginal:
      true : 0.6931818181818181
      false : 0.3068181818181819
    pizza
    Marginal:
      false : 1

   expectation:
   [ [ 'student', 0.6590909090909092 ],
     [ 'programmer', 0.0568181818181818 ],
     [ 'programmer_or_student', 0.6931818181818181 ],
     [ 'pizza', 0 ] ]

   Then it's a little less likely that Brian is a student, and we are
   quite sure that he's not a programmer (p =  0.0568181818181818).


*/

var model = function() {
    var student = flip(0.7)
    var programmer = student ? flip(0.2) : flip(0.1)
    var pizza = student && programmer ? flip(0.9) : flip(0.3)

    // Brian ate pizza last night
    condition(pizza == true)
    
    // Brian did not ate pizza last night
    // condition(pizza == false)
    
    return {
        student:student,
        programmer:programmer,
        programmer_or_student:programmer || student,
        pizza:pizza,
    }
}

var d = Infer(model)
display(d)

exp_map(d,["student","programmer","programmer_or_student","pizza"])
