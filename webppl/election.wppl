/*
  This is a port of the SPPL model election.pynb
  """
  from sppl.sym_util import binspace
  n = 4000
  param ~= randint(low=250, high=350)
  switch (param) cases (b in range(250, 350)):
    p ~= beta(a=277, b=b)
  switch (p) cases (x in binspace(0, 1, 20)):
    votes ~= binom(n=n, p=(x.left + x.right)/2)
  win ~= votes > 0.5*n
  """

  expectation:
  [ [ 'param', 299.24 ],
    [ 'p', 0.4818394511893711 ],
    [ 'votes', 1927.9490000000058 ],
    [ 'win', 0.3089999999999998 ] ]
  MAP:
  [ [ 'param', { val: 297, score: -3.912023005428147 } ],
    [ 'p', { val: 0.47307331027424654, score: -6.907755278982136 } ],
    [ 'votes', { val: 1919, score: -4.828313737302299 } ],
    [ 'win', { val: false, score: -0.36961545521446676 } ] ]

  Credible interval param 94%: [ 254, 347 ]
  Credible interval p 94%: [ 0.42679788311360584, 0.5424009533475325 ]
  Credible interval votes 94%: [ 1708, 2196 ]


  Compare with my Turing.jl model election.jl
  Summary Statistics
    parameters        mean        std   naive_se      mcse         ess      rhat   ess_per_sec 
        Symbol     Float64    Float64    Float64   Float64     Float64   Float64       Float64 

        param    299.7774    28.9717     0.2897    0.3653   6479.7518    0.9999      866.9724
            p      0.4814     0.0318     0.0003    0.0004   6508.3665    1.0002      870.8010
        votes   1925.2743   131.9134     1.3191    1.7207   6442.0098    1.0003      861.9226
          win      0.2902     0.4539     0.0045    0.0056   6597.9243    0.9999      882.7836

*/

var model = function() {
    var n = 4000
    var param = 250 + randomInteger(100)
    var p = beta(277,param)
    var votes = binomial(p,n)

    var win = votes > 0.5*n

    return {
        param:param,
        p:p,
        votes:votes,
        win:win
    }
}

// var d = Infer(model)
var d = Infer({method:"rejection",samples:1000},model)
// display(d)

exp_map(d,["param","p","votes","win"],["expectation","MAP"])


console.log("\nCredible interval param 94%:", credibleInterval(getSamples(d,"param"),0.94))
console.log("Credible interval p 94%:", credibleInterval(getSamples(d,"p"),0.94))
console.log("Credible interval votes 94%:", credibleInterval(getSamples(d,"votes"),0.94))
