/*
  Unfair coin in Racket Gamble.

  From a Brilliant quiz
  """
  Maja thinks her coin is unfair. She flips it 4 times and gets heads every time. 
  She calculates that this would only occur with a fair coin roughly 6% of the time.

  Can she conclude there is a roughly 94% chance that her coin is unfair?
  """

  Marginals:
  b
  Marginal:
    2 : 0.3749999999999999
    1 : 0.25000000000000006
    3 : 0.25000000000000006
    0 : 0.0625
    4 : 0.0625

  expectation:
  [ [ 'b', 2 ] ]

  The credible interval of 0.94 yields 0..4, which indicates that one can
  actually assume that a fair coin can give 4 heads.

  Credible interval for b (94%): [ 0, 4 ]

  However, throwing a coin 6 times and all 6 throws shows head is more 
  suspicious which can be seen with this experiment:


  Credible interval for b (94%): [ 1, 4 ]
  [ 'n:', 1 ]
  Credible interval for b (94%): [ 0, 1 ]
  [ 'n:', 2 ]
  Credible interval for b (94%): [ 0, 2 ]
  [ 'n:', 3 ]
  Credible interval for b (94%): [ 0, 3 ]
  [ 'n:', 4 ]
  Credible interval for b (94%): [ 1, 4 ]
  [ 'n:', 5 ]
  Credible interval for b (94%): [ 1, 4 ]
  [ 'n:', 6 ]
  Credible interval for b (94%): [ 1, 5 ]
  [ 'n:', 7 ]
  Credible interval for b (94%): [ 0, 5 ]
  [ 'n:', 8 ]
  Credible interval for b (94%): [ 1, 6 ]
  [ 'n:', 9 ]
  Credible interval for b (94%): [ 2, 7 ]
  [ 'n:', 10 ]
  Credible interval for b (94%): [ 3, 8 ]

  This is a port of my Racket/Gamble model gamble_unfair_coin.rkt 


*/


var model = function() {
    var n = 4

    var b = binomial(0.5, n)

    return {
        b:b}

}

var d  = Infer(model)
exp_map_all(d)

showCredibleInterval(d, "b",0.94)

console.log()

var t = mapN(function(n) {
    console.log(["n:",n+1])
    var model = function () {
        var b = binomial(0.5,n+1)
        return { b:b }
    }
    var d = Infer(model)
    showCredibleInterval(d,"b", 0.94)
},10);

             
