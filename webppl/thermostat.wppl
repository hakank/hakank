/*
  Thermostat problem.

  OMEGA: Fast, casual Inference from Simple Parts 
  From  https://www.youtube.com/watch?v=oCvbqKE2tWA
  @ ~ 21min
  
  The Omega (Julia) model is here:
  https://github.com/zenna/Omega.jl/blob/master/OmegaModels/src/causal/thermostat.jl


  Marginals:
  time
  Marginal:
    "evening" : 0.34399999999999986
    "morning" : 0.33299999999999996
    "afternoon" : 0.32300000000000006
  is_ac_on
  Marginal:
    false : 0.7530000000000001
    true : 0.2469999999999998
  is_window_open
  Marginal:
    true : 0.51
    false : 0.49000000000000005

  expectation:
  [ [ 'time', NaN ],
    [ 'is_ac_on', 0.2469999999999998 ],
    [ 'is_window_open', 0.51 ],
    [ 'outside_temp', 20.488725473219446 ],
    [ 'room_temp', 23.738735581343146 ],
    [ 'thermostat', 22.47827752070983 ] ]

  Cf ~/cplint/thermostat.pl
     ~/blog/thermostat.blog

*/

var model = function() {
    var times = ["morning", "afternoon","evening"];
    
    var time = uniformDraw(times);
    
    var is_window_open = flip(0.5);
    
    // a.c. is off when window is closed
    var is_ac_on = is_window_open ? false : flip(0.5);
    
    // hottest at noon, cool at night
    var outside_temp =
        (time == "morning") ? gaussian(20,2) :
        (time == "afternoon") ? gaussian(32,2) :
        (time == "evening") ? gaussian(10,2) : gaussian(25,2)
    ;
    
    
    // a.c. chills the room
    var room_temp = is_ac_on ? gaussian(20,2) : gaussian(25,2);
    
    
    // great insulation
    var thermostat =  is_window_open ? (outside_temp + room_temp) / 2.0 : room_temp;
    
    // condition(is_ac_on==true);
    // condition(is_window_open == false);
    // condition(room_temp < 20.0);
    // condition(room_temp > 20.0);
    // condition(time == "evening");
    // condition(outside_temp > 10.0);
    
    return {
        time:time,
        is_ac_on:is_ac_on,
        is_window_open:is_window_open,
        outside_temp:outside_temp,
        room_temp:room_temp,
        thermostat:thermostat,
    }

}

var d = Infer(model);
// display(d);

exp_map_all(d);
