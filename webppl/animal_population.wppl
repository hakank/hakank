/*
  From Statistics101 (Resampling Stats)
  File scalarizeExample.txt (edited)
  """
  From: http://www.resample.com/content/software/standalone/userguide/09-commands2.pdf

  Suppose we have a population that is 30% voles, 50% mice and 20% rabbits. 
  In a sample of 10 animals, what is the probability of observing 
  exactly 4 voles, 5 mice and 1 rabbit?
  -> 0.062
  """

  (See model2() and model3() below for some exact models.)

  Mpdel1: Resampling/10000
  Marginals:
  voles
  Marginal:
    3 : 0.26690000000000014
    2 : 0.23800000000000007
    4 : 0.20290000000000005
    1 : 0.1164
    5 : 0.09920000000000005
    6 : 0.036300000000000006
    0 : 0.0299
    7 : 0.009099999999999997
    8 : 0.0011
    9 : 0.00019999999999999985
  mice
  Marginal:
    4 : 0.20349999999999996
    7 : 0.11749999999999997
    3 : 0.1169
    2 : 0.044800000000000006
    8 : 0.0426
    9 : 0.009800000000000003
    1 : 0.009799999999999996
    0 : 0.0011
    10 : 0.0008000000000000003
  rabbits
  Marginal:
    2 : 0.2984
    1 : 0.2701
    3 : 0.20519999999999997
    0 : 0.10549999999999994
    4 : 0.08600000000000002
    5 : 0.027399999999999994
    6 : 0.006699999999999998
    7 : 0.0007000000000000001
  p
  Marginal:
    false : 0.9338
    true : 0.06620000000000001

  expectation:
  [ [ 'voles', 2.992800000000001 ],
    [ 'mice', 4.9986 ],
    [ 'rabbits', 2.0086 ],
    [ 'p', 0.06620000000000001 ] ]

*/
// Port of the resampling stats program
var animals_a = _.flatten([rep(30,"voles"),rep(50,"mice"),rep(20,"rabbits")])
var model = function() {
    var animals = resample(10,animals_a)
    var voles = count("voles",animals)
    var mice = count("mice",animals)
    var rabbits = count("rabbits",animals)
    var p = voles == 4 && mice == 5 && rabbits == 1
    return {
        voles:voles,
        mice:mice,
        rabbits:rabbits,
        p:p,
    }    
}

var d = Infer({method:"rejection",samples:10000},model)
// display(d)
exp_map_all(d)

/*
  Exact model using categorial() and Enumerate:

  Enumerate (exact):

  Marginals:
  voles
  Marginal:
    3 : 0.2668279319999996
    2 : 0.2334744405000001
    4 : 0.2001209489999996
    1 : 0.12106082100000023
    5 : 0.10291934520000025
    6 : 0.036756909000000115
    0 : 0.02824752489999998
    7 : 0.009001691999999962
    8 : 0.0014467005000000032
    9 : 0.00013778100000000064
    10 : 0.000005904900000000006
  mice
  Marginal:
    5 : 0.24609374999999975
    6 : 0.20507812499999972
    4 : 0.2050781249999996
    3 : 0.11718750000000044
    7 : 0.11718749999999997
    2 : 0.04394531250000052
    8 : 0.04394531249999997
    1 : 0.009765625000000062
    9 : 0.009765625000000002
    0 : 0.0009765625000000052
    10 : 0.0009765625000000009
  rabbits
  Marginal:
    2 : 0.3019898879999995
    1 : 0.26843545599999985
    3 : 0.20132659199999972
    0 : 0.10737418239999981
    4 : 0.08808038400000062
    5 : 0.02642411520000032
    6 : 0.00550502400000004
    7 : 0.0007864320000000021
    8 : 0.00007372800000000044
    9 : 0.000004096000000000029
    10 : 1.0240000000000041e-7
  p
  Marginal:
    false : 0.9362125000000001
    true : 0.06378749999999986

  expectation:
  [ [ 'voles', 3 ],
    [ 'mice', 4.999999999999997 ],
    [ 'rabbits', 2.000000000000002 ],
    [ 'p', 0.06378749999999986 ] ]

*/
console.log("\nModel 2 using categorical (exact):")
var model2 = function() {
    var animals = repeat(10,function() {categorical({ps:[30,50,20],vs:["voles","mice","rabbits"]})})
    var voles = count("voles",animals)
    var mice = count("mice",animals)
    var rabbits = count("rabbits",animals)
    var p = voles == 4 && mice == 5 && rabbits == 1
    return {
        voles:voles,
        mice:mice,
        rabbits:rabbits,
        p:p,
        
    }
}

var d2 = Infer(model2)
// display(d2)
exp_map_all(d2)


/*
  Model 3: Using multinomial (exact)

  Marginals:
  animals
  Marginal:
    [3,5,2] : 0.08504999999999996
    [3,6,1] : 0.07087500000000006
    [2,6,2] : 0.07087499999999994
    [4,5,1] : 0.06378750000000002
    [4,4,2] : 0.06378750000000002
    [2,5,3] : 0.05670000000000001
    [3,4,3] : 0.05670000000000001
    [2,7,1] : 0.050625
    [5,4,1] : 0.03827250000000002
    [4,3,3] : 0.03402000000000001
    [1,7,2] : 0.03375000000000002
    [1,6,3] : 0.03150000000000007
    [5,3,2] : 0.030617999999999992
    [2,4,4] : 0.02835
    [4,6,0] : 0.026578125
    [3,7,0] : 0.025312499999999998
    [3,3,4] : 0.02268000000000002
    [1,8,1] : 0.021093749999999994
    [5,5,0] : 0.01913625000000001
    [1,5,4] : 0.018900000000000014
    [2,8,0] : 0.01582031249999999
    [6,3,1] : 0.015309000000000001
    [5,2,3] : 0.012247199999999991
    [4,2,4] : 0.010206000000000008
    [6,4,0] : 0.009568124999999992
    [6,2,2] : 0.009185399999999986
    [2,3,5] : 0.009072000000000004
    [1,4,5] : 0.007560000000000002
    [0,7,3] : 0.007500000000000004
    [0,8,2] : 0.0070312500000000045
    [1,9,0] : 0.005859375000000008
    [3,2,5] : 0.005443200000000004
    [0,6,4] : 0.005250000000000007
    [7,2,1] : 0.0039365999999999984
    [0,9,1] : 0.003906250000000004
    [7,3,0] : 0.003280499999999998
    [0,5,5] : 0.002520000000000002
    [6,1,3] : 0.00244944
    [5,1,4] : 0.00244944
    [1,3,6] : 0.0020160000000000035
    [2,2,6] : 0.0018144000000000023
    [4,1,5] : 0.0016329599999999984
    [7,1,2] : 0.0015746399999999978
    [0,10,0] : 0.0009765625
    [0,4,6] : 0.0008400000000000011
    [8,2,0] : 0.0007381124999999991
    [3,1,6] : 0.0007257600000000002
    [8,1,1] : 0.0005904899999999997
    [1,2,7] : 0.00034560000000000005
    [6,0,4] : 0.0002449440000000002
    [7,0,3] : 0.000209952
    [2,1,7] : 0.00020736000000000005
    [5,0,5] : 0.00019595520000000033
    [0,3,7] : 0.00019200000000000009
    [8,0,2] : 0.00011809799999999983
    [4,0,6] : 0.00010886400000000022
    [9,1,0] : 0.00009841500000000001
    [3,0,7] : 0.000041471999999999965
    [9,0,1] : 0.000039366000000000036
    [1,1,8] : 0.00003456000000000002
    [0,2,8] : 0.000028800000000000012
    [2,0,8] : 0.000010368000000000008
    [10,0,0] : 0.000005904899999999995
    [0,1,9] : 0.0000025600000000000064
    [1,0,9] : 0.000001536000000000004
    [0,0,10] : 1.0240000000000004e-7
  p
  Marginal:
    false : 0.9362125000000001
    true : 0.06378750000000002

  expectation:
  [ [ 'animals', NaN ], [ 'p', 0.06378750000000002 ] ]

*/
console.log("\nModel 3 using multinomial (exact):")
var model3 = function() {
    var animals = multinomial([30/100,50/100,20/100],10)
    var p = _.isEqual(animals,[4,5,1])
    return {
        animals:animals,
        p:p,
    }
}

var d3 = Infer(model3)
exp_map_all(d3)
