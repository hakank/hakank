/*
  hypergeometric2_dist mirrors Mathematica's version of Hypergeometric[n,n_succ,n_tot]

  """
  A hypergeometric distribution gives the distribution of the number of successes in 
  n draws from a population of size n_tot containing n_succ successes.
  """
  
  This is based on my 
  hypergeometric_dist(k,N,K,n) 
  or rather
  hypergeometricCount(k,N,K,n)
  """
  What is the probability that we draw exactly k "success" objects
  of the n drawn objects of total N objects where there are in total
  K "success" objects

  k: number of successes we want to check (which isn't used here)
  N: total number of objects
  K: total number of success objects
  n: number of draws

  hypergeometricCount(k,N,K,n)
  Returns the number of found successes
  """
  
*/

/*
var hypergeometric2_dist = function(n_draws, n_succ, n_tot) {
    // hypergeometricCount(k:number of successes we want to check,
    //                     N: total number of objects
    //                     K: total number of success objects
    //                     n: number of draws
    // )
    return hypergeometric_count(1,n_tot,n_succ,n_draws)
}
*/

/* 
  Suppose an urn has 100 elements, of which 40 are special and we draw 10 elements.
  What is the probability of getting 0..10 special elements?
  What is the probability that we get >= 7 special elements?

  Mathematica
  Table[{n, PDF[HypergeometricDistribution[10, 40, 100], n]}, {n, 1, 10}] // N
  -> 
  {{0., 0.00435544},
   {1., 0.0341603}, 
   {2., 0.115291}, 
   {3., 0.220431}, 
   {4., 0.264313}, 
   {5., 0.207606}, 
   {6., 0.108128}, 
   {7., 0.0368556}, 
   {8., 0.0078636}, 
   {9., 0.000947778}, 
   {10., 0.0000489685}}

   Probability[x >= 7, x ~ HypergeometricDistribution[10, 40, 100]] // N
   -> 0.04571

  hypergeometric2_dist(10, 40, 100):
    4 : 0.26431278868315244
    3 : 0.22043074268556348
    5 : 0.20760568129294862
    2 : 0.11529107923356777
    6 : 0.10812795900674403
    7 : 0.036855645175231065
    1 : 0.034160319772908974
    8 : 0.007863596707646279
    0 : 0.004355440771045898
    9 : 0.0009477781342549209
    10 : 0.000048968536936504206

  Sorted
    0 : 0.004355440771045898
    1 : 0.034160319772908974
    2 : 0.11529107923356777
    3 : 0.22043074268556348
    4 : 0.26431278868315244
    5 : 0.20760568129294862
    6 : 0.10812795900674403
    7 : 0.036855645175231065
    8 : 0.007863596707646279
    9 : 0.0009477781342549209
   10 : 0.000048968536936504206

   p: 0.04571598855406877

*/
var model = function() {
    var h = hypergeometric2_dist(10, 40, 100)
    var p = h >= 7
    return {
        h:h,
        p:p,
    }
}

var d = Infer(model)
// display(d)
exp_map_all(d)

console.log("\nquantiles:",quantiles(function() { hypergeometric2_dist(10, 40, 100)},
                                   [0.01,0.5,0.9,0.99,0.999,0.9999,0.99999],1000))


console.log("\nquantiles:",quantiles(function() { hypergeometric2_dist(5, 1, 10)},
                                   [0.01,0.5,0.9,0.99,0.999,0.9999,0.99999],1000))
