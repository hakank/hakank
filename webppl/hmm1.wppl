/*

  Hidden Markov Models

  This is from the BLOG distribution hmm.dblog
  """
  A hidden Markov model with four states and four output symbols.
  The parameters of this model are completely made-up.
  DBLOG model
  """

  Result from the BLOG model
Number of samples: 10000
Distribution of values for S(@0)
	C	0.8001339096810202
	T	0.08987558005120157
	A	0.08014967566775201
	G	0.02984083460000944
Distribution of values for S(@1)
	A	0.8675349434309577
	G	0.06143183260720938
	T	0.03938992383392773
	C	0.03164330012788851
Distribution of values for S(@2)
	A	0.8380377293314887
	C	0.06327987780806169
	G	0.06124471216694968
	T	0.03743768069348417
Distribution of values for S(@3)
	A	0.8339983139214503
	G	0.06499166416483172
	C	0.05120381309054028
	T	0.049806208823160135
Distribution of values for S(@4)
	G	0.8222021911338014
	A	0.0783219824926769
	T	0.049959015230849495
	C	0.04951681114265568
Distribution of values for S(@5)
	G	0.296821700593107
	T	0.2420563938012798
	C	0.24113877968809827
	A	0.21998312591749955
======== Done ========

   This WebPPL model

S0
Marginal:
    "C" : 0.8098599999999994
    "T" : 0.10761000000000032
    "A" : 0.057280000000000136
    "G" : 0.025250000000000175
S1
Marginal:
    "A" : 0.8522399999999993
    "G" : 0.06947000000000055
    "T" : 0.05158000000000005
    "C" : 0.02671000000000006
S2
Marginal:
    "A" : 0.8734999999999999
    "T" : 0.060679999999999866
    "G" : 0.038099999999999995
    "C" : 0.027720000000000026
S3
Marginal:
    "A" : 0.8462999999999996
    "T" : 0.05993999999999996
    "G" : 0.04976000000000002
    "C" : 0.04400000000000026
S4
Marginal:
    "G" : 0.8326700000000002
    "C" : 0.061949999999999686
    "A" : 0.05904000000000024
    "T" : 0.04633999999999981
S5
Marginal:
    "A" : 0.2913499999999999
    "G" : 0.24687000000000053
    "T" : 0.2376799999999996
    "C" : 0.22409999999999974
S6
Marginal:
    "A" : 0.28601
    "G" : 0.2493499999999999
    "T" : 0.24023999999999984
    "C" : 0.22440000000000046
S7
Marginal:
    "A" : 0.2959699999999989
    "T" : 0.24865000000000015
    "G" : 0.23385000000000075
    "C" : 0.22153000000000014
expectation:
[ [ 'AA', 0.577300673050211 ],
  [ 'AC', 0.4482874798439089 ],
  [ 'AG', 0.48566088580407474 ],
  [ 'AT', 0.48065599537057246 ],
  [ 'CA', 0.5531343585626514 ],
  [ 'CC', 0.4524005081393402 ],
  [ 'CG', 0.4963172495208054 ],
  [ 'CT', 0.47385452717731724 ],
  [ 'GA', 0.5499804495458307 ],
  [ 'GC', 0.4862411415462855 ],
  [ 'GG', 0.5069228150890134 ],
  [ 'GT', 0.46725540041961955 ],
  [ 'TA', 0.5666167974870209 ],
  [ 'TC', 0.4447343183674775 ],
  [ 'TG', 0.496970144241073 ],
  [ 'TT', 0.469351120668058 ],
  [ 'S0', NaN ],
  [ 'S1', NaN ],
  [ 'S2', NaN ],
  [ 'S3', NaN ],
  [ 'S4', NaN ],
  [ 'S5', NaN ],
  [ 'S6', NaN ],
  [ 'S7', NaN ] ]


*/

var model = function() {

    var states = ["A","C","G","T"];
    
    var AA = uniform(0,1);
    var AC = uniform(0,1);
    var AG = uniform(0,1);
    var AT = uniform(0,1);
    
    var CA = uniform(0,1);
    var CC = uniform(0,1);
    var CG = uniform(0,1);
    var CT = uniform(0,1);
    
    var GA = uniform(0,1);
    var GC = uniform(0,1);
    var GG = uniform(0,1);
    var GT = uniform(0,1);
    
    var TA = uniform(0,1);
    var TC = uniform(0,1);
    var TG = uniform(0,1);
    var TT = uniform(0,1);
    
    /*
      random State S(Timestep t) =
      if t == @0 then 
      Categorical({A -> 0.3, C -> 0.2, G -> 0.1, T -> 0.4})
      else case S(prev(t)) in {
      A -> Categorical({A -> 0.1, C -> 0.3, G -> 0.3, T -> 0.3}),
      C -> Categorical({A -> 0.3, C -> 0.1, G -> 0.3, T -> 0.3}),
      G -> Categorical({A -> 0.3, C -> 0.3, G -> 0.1, T -> 0.3}),
      T -> Categorical({A -> 0.3, C -> 0.3, G -> 0.3, T -> 0.1})
      };
    */

    var S1 = function(t) {
        if (t == 0) {
            return categorical({ps:[0.3,0.2,0.1,0.4],vs:states})
        } else {
            var prev_t = S1(t-1);
            var val = 
                (prev_t == "A") ? categorical({ps:[AA,AC,AG,AT],vs:states}) :
                (prev_t == "C") ? categorical({ps:[CA,CC,CG,CT],vs:states}) :
                (prev_t == "G") ? categorical({ps:[GA,GC,GG,GT],vs:states}) :
                (prev_t == "T") ? categorical({ps:[TA,TC,TG,TT],vs:states}) : "xxx";
            return val;
        }
    }
    var S = mem(function(t) { return S1(t)});
    
    var results = ["ResultA","ResultC","ResultG","ResultT"];
    var O = (function(t) {
        var St = S(t);
        (St == "A") ? categorical({ps:[0.85,0.05,0.05, 0.05],vs:results}) :
        (St == "C") ? categorical({ps:[0.05,0.85,0.05, 0.05],vs:results}) :
        (St == "G") ? categorical({ps:[0.05,0.05,0.85, 0.05],vs:results}) :
        (St == "T") ? categorical({ps:[0.05,0.05,0.05, 0.85],vs:results}) : "yyy";
    });
    
    /* Evidence for the Hidden Markov Model.
     */
    
    condition(O(0) == "ResultC");
    condition(O(1) == "ResultA");
    condition(O(2) == "ResultA");
    condition(O(3) == "ResultA");
    condition(O(4) == "ResultG");
    
    /* Queries for the Hiddem Markov Model, given the evidence.  
     * Note that we can query S(5) even though our observations only 
     * went up to time 4.
     */

    return {
        S0:S(0),
        S1:S(1),
        S2:S(2),
        S3:S(3),
        S4:S(4),
        S5:S(5), // The unknown
        S6:S(6), // The unknown
        S7:S(7), // The unknown                
        
        AA:AA,
        AC:AC,
        AG:AG,
        AT:AT,
        
        CA:CA,
        CC:CC,
        CG:CG,
        CT:CT,
    
        GA:GA,
        GC:GC,
        GG:GG,
        GT:GT,
        
        TA:TA,
        TC:TC,
        TG:TG,
        TT:TT,
    }

}

// var d = Infer(model);
var d = Infer({method:"MCMC",kernel:"MH", samples:100000},model);
// display(d);


exp_map_all(d);



