/*
   From BLOG example/aircraft-position.blog

  numAircraft
  Marginal:
    3 : 0.6494099999999999
    4 : 0.25551999999999997
    5 : 0.08035999999999996
    6 : 0.012779999999999996
    7 : 0.0019299999999999996
  sumBlips
  Marginal:
    3 : 1
  numAircraftPositionLt5
  Marginal:
    1 : 0.4174899999999999
    0 : 0.28644000000000003
    2 : 0.23249000000000006
    3 : 0.05591000000000001
    4 : 0.006889999999999999
    5 : 0.0007700000000000001
    6 : 0.000009999999999999999
  expectation:
  [ [ 'numAircraft', 3.4622999999999995 ],
    [ 'sumBlips', 3 ],
    [ 'numAircraftPositionLt5', 1.08167 ] ]
  MAP:
  [ [ 'numAircraft', { val: 3, score: -0.4316910206022634 } ],
    [ 'sumBlips', { val: 3, score: 0 } ],
    [ 'numAircraftPositionLt5',
       { val: 1, score: -0.8734946870738916 } ] ]

*/

var model = function() {

    // Number Declarations
    // #Aircraft ~ Poisson(5);
    var numAircraft = poisson(5);
    
    // #Blip(Source=a) ~ Bernoulli(0.9);
    var blip = mem(function(a) { return flip(0.9) });
    var sumBlips = sum(mapN(function(a) { return blip(a); },numAircraft));
    
    var Position = mem(function(a) {
        return gaussian(0, 10);
    })
    
    var ObsPos = mem(function(b) {
        return gaussian(Position(blip(b)), 1);
    })
    
    var inRange = function(x, y, epsilon) {
       return (x > y - epsilon) && (x < y + epsilon);
    }
    
    var epsilon = 0.05;

    // Evidence
    // obs {b for Blip b} = {B1, B2, B3};
    condition(sumBlips == 3);

    // condition(inRange(ObsPos(0), 5.0, epsilon));
    factor(inRange(ObsPos(0), 5.0, epsilon) ? 0 : -Infinity);
    // factor(ObsPos(1) == 6.1 ? 0: -2);
    // factor(ObsPos(1) == 7.5 ? 0: -2);    
    
    // Query
    return {
        numAircraft:numAircraft,
        sumBlips:sumBlips,
        numAircraftPositionLt5:sum(mapN(function(a) { return Position(a) > 5},numAircraft))
    }

}

var d = Infer({method:"MCMC",kernel:"MH",samples:100000},model);
// display(d);

exp_map(d,["numAircraft","sumBlips","numAircraftPositionLt5"]);
