/*
   From
   "First-Order Probabilistic Inference"
   https://www.youtube.com/watch?v=leIqVD4-Fks
   Time 45:06

   (The shown model in the talks is a BLOG model).


  numBattalion
  Marginal:
    4 : 0.114
    8 : 0.11200000000000003
    6 : 0.11100000000000004
    9 : 0.10700000000000003
    3 : 0.10299999999999998
    10 : 0.10199999999999998
    1 : 0.09800000000000002
    7 : 0.08000000000000002
  large
  Marginal:
    [1] : 0.07100000000000002
    [1,1] : 0.03200000000000001
    [0] : 0.027000000000000007
    [1,0] : 0.025000000000000012
    [1,1,1] : 0.020000000000000004
    [1,0,1] : 0.019
    [0,0] : 0.018000000000000002
    [0,1] : 0.017000000000000005
    ...
  numSoldier
  Marginal:
    [300] : 0.014000000000000007
    [1487] : 0.004000000000000005
    [1473] : 0.0030000000000000044
    [1514] : 0.0030000000000000044
    [1519] : 0.0030000000000000044
    [491] : 0.0020000000000000026
    ...
    [1482] : 0.0020000000000000026
    [527,300,1515] : 0.001000000000000001
    [514,524] : 0.001000000000000001
    [478,1442,1500,531,472,1508,1516] : 0.001000000000000001
    ...
  numSoldierMean
  Marginal:
    300 : 0.01900000000000001
    1018 : 0.004000000000000005
    1487 : 0.004000000000000005
    498 : 0.0030000000000000044
    1509 : 0.0030000000000000044
    ...
  region
  Marginal:
    [2] : 0.03700000000000002
    [1] : 0.03600000000000002
    [3] : 0.017000000000000005
    [2,2] : 0.009000000000000015
    [3,3] : 0.00800000000000001
    [3,2] : 0.007000000000000009
    [4] : 0.007000000000000009
    [2,4] : 0.006000000000000009
    [3,1] : 0.006000000000000009
    ...
  expectation:
  [ [ 'numBattalion', 5.557000000000001 ],
    [ 'large', NaN ],
    [ 'numSoldier', NaN ],
    [ 'numSoldierMean', 1097.1255670634926 ],
    [ 'region', NaN ] ]

  MAP:
  [ [ 'numBattalion', { val: 4, score: -2.1715568305876416 } ],
    [ 'large', { val: [Array], score: -2.6450754019408214 } ],
    [ 'numSoldier', { val: [Array], score: -4.268697949366878 } ],
    [ 'numSoldierMean', { val: 300, score: -3.963316299815696 } ],
    [ 'region', { val: [Array], score: -3.296837366337912 } ] ]


   cf ~/blog/batallion.blog

*/

var model = function() {
    // var numBattalion ~ UniformInt(1,10);
    // var numBattalion = 1+randomInteger(3);
    var numBattalion = 1+randomInteger(10);
    
    var large = function(bat) {
        return flip(0.6);
    }
    
    var region = function(bat) {
        // return categorical({ps:[4, 2, 1],vs:[1,2,3]});
        return 1+poisson(numBattalion);
    }
    
    var numSoldier = function(bat) {
        if (large(bat)) {
            return poisson(1500);
        } else {
            if (region(bat) == 2) {
                return 300;
            } else {
                return poisson(500);
            }
        }
    }
         
    return {
        numBattalion:numBattalion,
        large:mapN(function(b) { return 1*large(b); },numBattalion),
        numSoldier:mapN(function(b) { return numSoldier(b); },numBattalion),
        numSoldierMean:listMean(mapN(function(b) { return numSoldier(b); },numBattalion)),
        region:mapN(function(b) { return region(b); },numBattalion),
    }
}

var d = Infer({method:"rejection",samples:1000},model);
// display(d);

exp_map_all(d)
