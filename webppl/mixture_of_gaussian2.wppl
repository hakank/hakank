/*
   From BLOG examples/mixture-of-gaussian-full.blog

   expectation:
   [ [ 'a', 0.13901980725284457 ],
     [ 'b', 0.3048479498304923 ],
     [ 'min_ab', -0.1016 ] ]

   MAP:
   [ [ 'a', { val: 0.4680096143733068, score: -4.9618451299268225 } ],
     [ 'b', { val: 0.5894705858306084, score: -4.961845129926823 } ],
     [ 'min_ab', { val: 0.1, score: -2.5257286443082547 } ] ]

*/

var model = function() {
    var p = beta(0.5, 1);
    
    var z = function(i) {
        return flip(p);
    }
    
    var a = uniform(-1, 1);
    var b = uniform(-1, 1);     

    var x = function(i) {
        if (z(i) == 1) {
            return Gaussian({mu:a, sigma:1.0})
        } else {
            return Gaussian({mu:b, sigma:1.0}) 
        }
    }
    
    observe(x(0), 0.2); 
    observe(x(1), 1.0); 
    observe(x(3), 0.5); 
    observe(x(4), 0.6);

    return {
        a:a,
        b:b,
        min_ab:Math.round(Math.min(a, b) * 10.0) / 10.0
    }

}

var d = Infer({method:"MCMC",samples:1000,lag:10},model);
// display(d);

exp_map(d,["a","b","min_ab"]);
