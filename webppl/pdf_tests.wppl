/*
   Test of PDFs for some distributions.

   See node_module/hakank_utils/distributions.wppl for the definitions.
*/

/*
  Hypergeometric

  Mathematica:
  Table[{n, PDF[HypergeometricDistribution[10, 40, 100], n]}, {n, 0, 10}] // N
  -> 
  {{0., 0.00435544}, 
   {1., 0.0341603}, 
   {2., 0.115291}, 
   {3., 0.220431}, 
   {4., 0.264313}, 
   {5., 0.207606}, 
   {6., 0.108128}, 
   {7., 0.0368556}, 
   {8., 0.0078636}, 
   {9., 0.000947778}, 
   {10., 0.0000489685}}

hypergeometric_pdf(100,40,10,k):
[ [ 0, 0.0043554407710458916 ],
  [ 1, 0.034160319772908954 ],
  [ 2, 0.11529107923356771 ],
  [ 3, 0.22043074268556342 ],
  [ 4, 0.26431278868315244 ],
  [ 5, 0.20760568129294882 ],
  [ 6, 0.10812795900674418 ],
  [ 7, 0.0368556451752311 ],
  [ 8, 0.007863596707646291 ],
  [ 9, 0.0009477781342549201 ],
  [ 10, 0.000048968536936504206 ] ]

*/
console.log("\nhypergeometric_pdf(100,40,10,k):")
console.log(mapN(function(k) { return [k,hypergeometric_pdf(100,40,10,k)] }, 11))

/*
  Mathematica's order of arguments.

hypergeometric2_pdf(10,40,100,k):
[ [ 0, 0.0043554407710458916 ],
  [ 1, 0.034160319772908954 ],
  [ 2, 0.11529107923356771 ],
  [ 3, 0.22043074268556342 ],
  [ 4, 0.26431278868315244 ],
  [ 5, 0.20760568129294882 ],
  [ 6, 0.10812795900674418 ],
  [ 7, 0.0368556451752311 ],
  [ 8, 0.007863596707646291 ],
  [ 9, 0.0009477781342549201 ],
  [ 10, 0.000048968536936504206 ] ]

*/
console.log("\nhypergeometric2_pdf(10,40,100,k):")
console.log(mapN(function(k) { return [k,hypergeometric2_pdf(10,40,100,k)] }, 11))


/*
  Geometric

  Mathematica 
  Table[{k, PDF[GeometricDistribution[0.4], k]}, {k, 0, 10}] // N 
  -> 
  {{0., 0.4}, 
   {1., 0.24}, 
   {2., 0.144}, 
   {3., 0.0864}, 
   {4., 0.05184}, 
   {5., 0.031104}, 
   {6., 0.0186624}, 
   {7., 0.0111974}, 
   {8., 0.00671846}, 
   {9., 0.00403108}, 
   {10., 0.00241865}}

geometric_pdf(0.4,k):
[ [ 0, 0.4 ],
  [ 1, 0.24 ],
  [ 2, 0.144 ],
  [ 3, 0.0864 ],
  [ 4, 0.05184 ],
  [ 5, 0.031104 ],
  [ 6, 0.0186624 ],
  [ 7, 0.01119744 ],
  [ 8, 0.0067184639999999995 ],
  [ 9, 0.0040310784 ],
  [ 10, 0.0024186470399999997 ] ]


*/
console.log("\ngeometric_pdf(0.4,k):")
console.log(mapN(function(k) { return [k,geometric_pdf(0.4,k)] }, 11))



/*
  Negative Binomial

  Mathematica:
  Table[{k, PDF[NegativeBinomialDistribution[3, 0.7], k]}, {k, 0, 10}] // N 
  -> 
  {{0., 0.343}, 
   {1., 0.3087}, 
   {2., 0.18522}, 
   {3., 0.09261}, 
   {4., 0.0416745}, 
   {5., 0.0175033}, 
   {6., 0.00700132}, 
   {7., 0.00270051}, 
   {8., 0.00101269}, 
   {9., 0.00037132}, 
   {10., 0.000133675}}

negative_binomial(3,0.7,k):
[ [ 0, 0.3429999999999999 ],
  [ 1, 0.3087 ],
  [ 2, 0.18522 ],
  [ 3, 0.09261000000000003 ],
  [ 4, 0.04167450000000001 ],
  [ 5, 0.017503290000000008 ],
  [ 6, 0.007001316000000004 ],
  [ 7, 0.002700507600000002 ],
  [ 8, 0.0010126903500000009 ],
  [ 9, 0.00037131979500000035 ],
  [ 10, 0.00013367512620000014 ] ]

*/
console.log("\nnegative_binomial(3,0.7,k):")
console.log(mapN(function(k) { return [k,negative_binomial_pdf(3,0.7,k)] }, 11))


/*
  Poisson

  Mathematica:
  Table[{k, PDF[PoissonDistribution[10], k]}, {k, 0, 20}] // N 
  -> 
  {{0., 0.0000453999}, 
  {1., 0.000453999}, 
  {2., 0.00227}, 
  {3., 0.00756665}, 
  {4., 0.0189166}, 
  {5., 0.0378333}, 
  {6., 0.0630555}, 
  {7., 0.0900792}, 
  {8., 0.112599}, 
  {9., 0.12511}, 
  {10., 0.12511}, 
  {11., 0.113736}, 
  {12., 0.0947803}, 
  {13., 0.0729079}, 
  {14., 0.0520771}, 
  {15., 0.0347181}, 
  {16., 0.0216988}, 
  {17., 0.012764}, 
  {18., 0.00709111}, 
  {19., 0.00373216}, 
  {20., 0.00186608}}

poisson_pdf(10,k):
[ [ 0, 0.00004539992976248485 ],
  [ 1, 0.00045399929762484845 ],
  [ 2, 0.0022699964881242422 ],
  [ 3, 0.0075666549604141405 ],
  [ 4, 0.018916637401035354 ],
  [ 5, 0.0378332748020707 ],
  [ 6, 0.06305545800345118 ],
  [ 7, 0.09007922571921596 ],
  [ 8, 0.11259903214901995 ],
  [ 9, 0.1251100357211333 ],
  [ 10, 0.1251100357211333 ],
  [ 11, 0.11373639611012118 ],
  [ 12, 0.09478033009176765 ],
  [ 13, 0.07290794622443665 ],
  [ 14, 0.05207710444602617 ],
  [ 15, 0.03471806963068412 ],
  [ 16, 0.021698793519177573 ],
  [ 17, 0.012763996187751514 ],
  [ 18, 0.007091108993195285 ],
  [ 19, 0.003732162627997519 ],
  [ 20, 0.0018660813139987594 ] ]

*/
console.log("\npoisson_pdf(10,k):")
console.log(mapN(function(k) { return [k,poisson_pdf(10,k)] }, 21))


/*
  Binomial 

  Mathematica:
  Table[{k, PDF[BinomialDistribution[15, 0.5], k]}, {k, 0, 15}] // N 
  -> 
  {{0., 0.0000305176}, 
   {1., 0.000457764}, 
   {2., 0.00320435}, 
   {3., 0.0138855}, 
   {4., 0.0416565}, 
   {5., 0.0916443}, 
   {6., 0.15274}, 
   {7., 0.196381}, 
   {8., 0.196381}, 
   {9., 0.15274}, 
   {10., 0.0916443}, 
   {11., 0.0416565}, 
   {12., 0.0138855}, 
   {13., 0.00320435}, 
   {14., 0.000457764}, 
   {15., 0.0000305176}}

binomial_pdf(0.5,15,k):
[ [ 0, 0.000030517578125 ],
  [ 1, 0.000457763671875 ],
  [ 2, 0.003204345703125 ],
  [ 3, 0.013885498046875 ],
  [ 4, 0.041656494140625 ],
  [ 5, 0.091644287109375 ],
  [ 6, 0.152740478515625 ],
  [ 7, 0.196380615234375 ],
  [ 8, 0.196380615234375 ],
  [ 9, 0.152740478515625 ],
  [ 10, 0.091644287109375 ],
  [ 11, 0.041656494140625 ],
  [ 12, 0.013885498046875 ],
  [ 13, 0.003204345703125 ],
  [ 14, 0.000457763671875 ],
  [ 15, 0.000030517578125 ] ]

*/
console.log("\nbinomial_pdf(0.5,15,k):")
console.log(mapN(function(k) { return [k,binomial_pdf(0.5,15,k)] }, 16))



/*
  Bernoulli 

  Mathematica:
  Table[{k, PDF[BernoulliDistribution[0.1], k]}, {k, 0, 1}] // N 
  -> 
  {{0., 0.9}, 
   {1., 0.1}}

bernoulli_pdf(0.1,k):
[ [ 0, 0.9 ], 
  [ 1, 0.1 ] ]

*/
console.log("\nbernoulli_pdf(0.1,k):")
console.log(mapN(function(k) { return [k,bernoulli_pdf(0.1,k)] }, 2))

/*
  Gaussian

  Mathematica:
  Table[{k, PDF[NormalDistribution[100, 15], k]}, {k, 95, 105}] // N 
  -> 
  {{95., 0.0251589}, 
   {96., 0.0256671}, 
   {97., 0.0260695}, 
   {98., 0.0263608}, 
   {99., 0.0265371}, 
   {100., 0.0265962}, 
   {101., 0.0265371}, 
   {102., 0.0263608}, 
   {103., 0.0260695}, 
   {104., 0.0256671}, 
   {105., 0.0251589}}

gaussian_pdf(100,15,k):
[ [ 95, 0.025158881846199545 ],
  [ 96, 0.025667124973067598 ],
  [ 97, 0.02606951293169706 ],
  [ 98, 0.026360789392387847 ],
  [ 99, 0.026537115087596815 ],
  [ 100, 0.02659615202676218 ],
  [ 101, 0.026537115087596815 ],
  [ 102, 0.026360789392387847 ],
  [ 103, 0.02606951293169706 ],
  [ 104, 0.025667124973067598 ],
  [ 105, 0.025158881846199545 ] ]

*/
console.log("\ngaussian_pdf(100,15,k):")
console.log(mapN(function(k) { return [k+95,gaussian_pdf(100,15,k+95)] }, 11))
    

/*
  Exponential

  Mathematica:
  Table[{k, PDF[ExponentialDistribution[1/10], k]}, {k, 0, 10}] // N 
  -> 
  {{0., 0.1}, 
   {1., 0.0904837}, 
   {2., 0.0818731}, 
   {3., 0.0740818}, 
   {4., 0.067032}, 
   {5., 0.0606531}, 
   {6., 0.0548812}, 
   {7., 0.0496585}, 
   {8., 0.0449329}, 
   {9., 0.040657}, 
   {10., 0.0367879}}

exponential_pdf(1/10,k):
[ [ 0, 0.1 ],
  [ 1, 0.09048374180359596 ],
  [ 2, 0.0818730753077982 ],
  [ 3, 0.07408182206817178 ],
  [ 4, 0.06703200460356394 ],
  [ 5, 0.06065306597126335 ],
  [ 6, 0.05488116360940264 ],
  [ 7, 0.04965853037914095 ],
  [ 8, 0.044932896411722156 ],
  [ 9, 0.04065696597405991 ],
  [ 10, 0.036787944117144235 ] ]

*/
console.log("\nexponential_pdf(1/10,k):")
console.log(mapN(function(k) { return [k,exponential_pdf(1/10,k)] }, 11))



/*
  Uniform

  Mathematica
  Table[{k, PDF[UniformDistribution[{1, 6}], k]}, {k, 0, 6}] // N 
  -> 
  {{0., 0.}, 
   {1., 0.2}, 
   {2., 0.2}, 
   {3., 0.2}, 
   {4., 0.2}, 
   {5., 0.2}, 
   {6., 0.2}}

uniform_pdf(1,52,k):
[ [ 0, 0 ],
  [ 1, 0.2 ],
  [ 2, 0.2 ],
  [ 3, 0.2 ],
  [ 4, 0.2 ],
  [ 5, 0.2 ],
  [ 6, 0.2 ] ]

*/
console.log("\nuniform_pdf(1,52,k):")
console.log(mapN(function(k) { return [k,uniform_pdf(1,6,k)] }, 7))


/*
  Beta
  https://en.wikipedia.org/wiki/Beta_distribution
*/

var beta_pdf = function(a,b,x) {
    return Math.pow(x,a-1)*Math.pow(1-x,b-1)/betaf(a,b)
}

/*
  Beta

  Mathematica
  Table[{k, PDF[BetaDistribution[10, 10], k]}, {k, 0, 1, 0.1}] // N 
  ->
  {{0., 0.}, 
   {0.1, 0.000357891}, 
   {0.2, 0.0634817}, 
   {0.3, 0.73374}, 
   {0.4, 2.44045}, 
   {0.5, 3.52394}, 
   {0.6, 2.44045}, 
   {0.7, 0.73374}, 
   {0.8, 0.0634817}, 
   {0.9, 0.000357891}, 
   {1., 0.}}

beta_pdf(10,10,k):
[ [ 0, 0 ],
  [ 0.1, 0.00035789129932842044 ],
  [ 0.2, 0.0634816782191822 ],
  [ 0.3, 0.7337400214305957 ],
  [ 0.4, 2.440448969508129 ],
  [ 0.5, 3.5239410400390625 ],
  [ 0.6, 2.440448969508129 ],
  [ 0.7, 0.7337400214305966 ],
  [ 0.8, 0.06348167821918199 ],
  [ 0.9, 0.0003578912993284193 ],
  [ 1, 0 ] ]

*/
console.log("\nbeta_pdf(10,10,k):")
console.log(mapN(function(k) { return [k/10,beta_pdf(10,10,k/10)] }, 11))


/*
  Gumbel

  Mathematica:
  Table[{k, PDF[GumbelDistribution[0, 1], k]}, {k, 0, 1, 0.1}] // N 
  -> 
  {{0., 0.367879}, 
   {0.1, 0.365982}, 
   {0.2, 0.360089}, 
   {0.3, 0.349987}, 
   {0.4, 0.335604}, 
   {0.5, 0.317042}, 
   {0.6, 0.294605}, 
   {0.7, 0.268809}, 
   {0.8, 0.240378}, 
   {0.9, 0.210219}, 
   {1., 0.179374}}

gumbel_pdf(0,1,k):
[ [ 0, 0.36787944117144233 ],
  [ 0.1, 0.36598207650575776 ],
  [ 0.2, 0.360089467289227 ],
  [ 0.3, 0.34998716115842166 ],
  [ 0.4, 0.33560355964344496 ],
  [ 0.5, 0.31704192107794216 ],
  [ 0.6, 0.2946052953538794 ],
  [ 0.7, 0.2688093981817773 ],
  [ 0.8, 0.2403784005083946 ],
  [ 0.9, 0.21021948841553262 ],
  [ 1, 0.17937407873401723 ] ]
  
*/
console.log("\ngumbel_pdf(0,1,k):")
console.log(mapN(function(k) { return [k/10,gumbel_pdf(0,1,k/10)] }, 11))

    

/*
  Laplace 

  Mathematica
  Table[{k, PDF[LaplaceDistribution[0, 1], k]}, {k, 0, 1, 0.1}] // N 
  ->
  {{0., 0.5}, 
   {0.1, 0.452419}, 
   {0.2, 0.409365}, 
   {0.3, 0.370409}, 
   {0.4, 0.33516}, 
   {0.5, 0.303265}, 
   {0.6, 0.274406}, 
   {0.7, 0.248293}, 
   {0.8, 0.224664}, 
   {0.9, 0.203285}, 
   {1., 0.18394}}

laplace_pdf(0,1,k):
[ [ 0, 0.5 ],
  [ 0.1, 0.45241870901797976 ],
  [ 0.2, 0.4093653765389909 ],
  [ 0.3, 0.37040911034085894 ],
  [ 0.4, 0.33516002301781966 ],
  [ 0.5, 0.3032653298563167 ],
  [ 0.6, 0.27440581804701325 ],
  [ 0.7, 0.24829265189570476 ],
  [ 0.8, 0.22466448205861078 ],
  [ 0.9, 0.20328482987029955 ],
  [ 1, 0.18393972058572117 ] ]

*/
console.log("\nlaplace_pdf(0,1,k):")
console.log(mapN(function(k) { return [k/10,laplace_pdf(0,1,k/10)] }, 11))
    

/*
  Logistic

  Mathematica
  Table[{k, PDF[LogisticDistribution[3, 1], k]}, {k, 0, 10}] // N 
  ->
  {{0., 0.0451767}, 
   {1., 0.104994}, 
   {2., 0.196612}, 
   {3., 0.25}, 
   {4., 0.196612}, 
   {5., 0.104994}, 
   {6., 0.0451767}, 
   {7., 0.0176627}, 
   {8., 0.00664806}, 
   {9., 0.00246651}, 
   {10., 0.000910221}}

logistic_pdf(3,1,k):
[ [ 0, 0.04517665973091213 ],
  [ 1, 0.10499358540350652 ],
  [ 2, 0.19661193324148185 ],
  [ 3, 0.25 ],
  [ 4, 0.19661193324148188 ],
  [ 5, 0.1049935854035065 ],
  [ 6, 0.045176659730912144 ],
  [ 7, 0.017662706213291114 ],
  [ 8, 0.006648056670790156 ],
  [ 9, 0.0024665092913600485 ],
  [ 10, 0.0009102211801218265 ] ]

*/
console.log("\nlogistic_pdf(3,1,k):")
console.log(mapN(function(k) { return [k,logistic_pdf(3,1,k)] }, 11))


/*
  Cauchy

  Mathematica
  Table[{k, PDF[CauchyDistribution[1, 2], k]}, {k, 0, 10}] // N 
  ->
  {{0., 0.127324}, 
   {1., 0.159155}, 
   {2., 0.127324}, 
   {3., 0.0795775}, 
   {4., 0.0489708}, 
   {5., 0.031831}, 
   {6., 0.0219524}, 
   {7., 0.0159155}, 
   {8., 0.0120117}, 
   {9., 0.00936206}, 
   {10., 0.00748964}}

cauchy_pdf(1,2,k):
[ [ 0, 0.12732395447351627 ],
  [ 1, 0.15915494309189535 ],
  [ 2, 0.12732395447351627 ],
  [ 3, 0.07957747154594767 ],
  [ 4, 0.048970751720583176 ],
  [ 5, 0.03183098861837907 ],
  [ 6, 0.021952405943709702 ],
  [ 7, 0.015915494309189534 ],
  [ 8, 0.012011693818256251 ],
  [ 9, 0.009362055475993843 ],
  [ 10, 0.0074896443807950745 ] ]

*/
console.log("\ncauchy_pdf(1,2,k):")
console.log(mapN(function(k) { return [k,cauchy_pdf(1,2,k)] }, 11))



/*
  See beta_binomial_dist.wppl for the origina of the parameters
  It seems to be correct for integers a and b, but not for floats!

  Mathematica:
  Table[{x, PDF[BetaBinomialDistribution[34, 31, 12], x] // N}, {x, 0, 12}]
  {{0, 0.000356459}, 
   {1, 0.00346275}, 
   {2, 0.016258}, 
   {3, 0.048774}, 
   {4, 0.104114}, 
   {5, 0.166582}, 
   {6, 0.204851}, 
   {7, 0.195096}, 
   {8, 0.142838}, 
   {9, 0.078421}, 
   {10, 0.0306555}, 
   {11, 0.00766387}, 
   {12, 0.000927081}}

beta_binomial_pdf(12, 34.09558,31.5715, 0 ): 0.0003564591123854593
beta_binomial_pdf(12, 34.09558,31.5715, 1 ): 0.0034627456631730336
beta_binomial_pdf(12, 34.09558,31.5715, 2 ): 0.016258013174653873
beta_binomial_pdf(12, 34.09558,31.5715, 3 ): 0.04877403952396162
beta_binomial_pdf(12, 34.09558,31.5715, 4 ): 0.10411381513768732
beta_binomial_pdf(12, 34.09558,31.5715, 5 ): 0.1665821042202997
beta_binomial_pdf(12, 34.09558,31.5715, 6 ): 0.2048509660006388
beta_binomial_pdf(12, 34.09558,31.5715, 7 ): 0.1950961580958465
beta_binomial_pdf(12, 34.09558,31.5715, 8 ): 0.1428382586058876
beta_binomial_pdf(12, 34.09558,31.5715, 9 ): 0.07842100472480104
beta_binomial_pdf(12, 34.09558,31.5715, 10 ): 0.030655483665149506
beta_binomial_pdf(12, 34.09558,31.5715, 11 ): 0.007663870916287376
beta_binomial_pdf(12, 34.09558,31.5715, 12 ): 0.0009270811592283115


*/
// var t = mapN(function(x) {
//     // a and b with non integer values does not work as expected..
//     // console.log("beta_binomial_pdf(12, 34.09558,31.5715,",x,"):",beta_binomial_pdf(12, 34.09558,31.5715 ,x))},13)
    
//     console.log("beta_binomial_pdf(12, 34.09558,31.5715,",x,"):",beta_binomial_pdf(12, 34,31 ,x))},13)

console.log("\nbeta_binomial_pdf(12,34,31,k)")
console.log(mapN(function(k) { return [k,beta_binomial_pdf(12,34,31,k)] }, 13))


/*
  Zipf
  Table[{x, PDF[ZipfDistribution[15, 0.3], x]}, {x, 1, 15}]
  -> 
  {{1, 0.40531}, 
   {2, 0.164607}, 
   {3, 0.0971695}, 
   {4, 0.0668513}, 
   {5, 0.050018}, 
   {6, 0.0394631}, 
   {7, 0.0322969}, 
   {8, 0.0271501}, 
   {9, 0.0232955}, 
   {10, 0.0203136}, 
   {11, 0.0179464}, 
   {12, 0.016027}, 
   {13, 0.0144431}, 
   {14, 0.0131166}, 
   {15, 0.0119914}}

zipf_pdf(15,0.3,x):
[ [ 1, 0.4053103525580217 ],
  [ 2, 0.1646071525666219 ],
  [ 3, 0.09716952184112392 ],
  [ 4, 0.06685127706480755 ],
  [ 5, 0.05001804248785702 ],
  [ 6, 0.03946308848412123 ],
  [ 7, 0.03229685582099085 ],
  [ 8, 0.02715005499768229 ],
  [ 9, 0.02329552135849037 ],
  [ 10, 0.02031363743590493 ],
  [ 11, 0.017946394327218534 ],
  [ 12, 0.016026994094422816 ],
  [ 13, 0.014443130614994148 ],
  [ 14, 0.013116599267685826 ],
  [ 15, 0.011991377080057005 ] ]

*/
console.log("\nzipf_pdf(15,0.3,x):")
console.log(mapN(function(k) { return [k+1,zipf_pdf(15,0.3,k+1)] }, 15))

