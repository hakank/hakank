/*
  From Statistics101 (Resampling Stats)
  File pennies.txt and penniesReadable.txt
  """
  Two players, each with a stake of 10 pennies play this game:
  A coin is tossed. If it is heads, player B gives A one penny.
  If it is tails, player A gives B one penny.
  What is the probability that one player will lose his entire
  stake of 10 pennies if they play for 200 tosses?
  From "Resampling: The New Statistics, Julian Simon, p. 110.
  -> 
  probabilityOfRuin: 0.8928
  """

  Note: I interpret this as 
  "probability that _anyone_ of the players will lose his entire stake",
  i.e. not one specific player.

  For n=20 and stake=10
  Marginals:
  s
  Marginal:
    0 : 0.961
    1 : 0.011000000000000005
    3 : 0.009
    2 : 0.005999999999999998
    4 : 0.004000000000000002
    6 : 0.004000000000000002
    5 : 0.0020000000000000005
    7 : 0.0010000000000000002
    8 : 0.0010000000000000002
    10 : 0.0010000000000000002
  p
  Marginal:
    false : 0.9609999999999999
    true : 0.03900000000000001

  expectation:
  [ [ 's', 0.12500000000000003 ], 
    [ 'p', 0.03900000000000001 ] ]

  * n=200, stake=10, Rejection/1000 samples (23.6s)

  Marginals:
  s
  Marginal:
    0 : 0.113
    1 : 0.03200000000000001
    3 : 0.020000000000000004
    5 : 0.017000000000000005
    19 : 0.013999999999999995
    4 : 0.012999999999999998
    9 : 0.012999999999999998
    29 : 0.011999999999999997
    23 : 0.011999999999999997
    10 : 0.011999999999999997
    15 : 0.011000000000000005
    2 : 0.010000000000000005
    16 : 0.010000000000000005
    6 : 0.010000000000000005
    13 : 0.009
    38 : 0.009
    7 : 0.009
    75 : 0.009
    59 : 0.009
    108 : 0.009
    28 : 0.007999999999999997
    27 : 0.007999999999999997
    ...
  p
  Marginal:
    true : 0.887
    false : 0.113

  expectation:
  [ [ 's', 58.60599999999997 ], 
    [ 'p', 0.887 ] ]


*/

var model = function() {
    var n = 200
    var stake = 10
    var tosses = mapN(function(i) { flip(0.5) ? 1 : -1 }, n)
    // The accumulated amount of the tosses
    var acc = mapN(function(i) {
        return sum(mapN(function(j) { tosses[j] },i))
    },n)
    var s = sum(map(function(v) { return Math.abs(v) >= stake },acc))
    var p = s > 0
    
    return {
        s:s,
        p:p,
    }
}

// var d = Infer(model) // Works for small n, e.g. n=20
// var d = Infer({method:"rejection",samples:1000},model)
var d = Infer({method:"SMC",particles:1000,rejuvSteps:0},model)
// display(d)
exp_map_all(d)
