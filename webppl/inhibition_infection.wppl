/*
   https://dtai.cs.kuleuven.be/problog/tutorial/basic/10_inhibitioneffects.html
   """
   Example 2: Social Network

   An infectious disease spreads through a population as follows: when- ever two people are in regular 
   contact with each other and one is infected, there is a probability of 0.6 of the infection spreading 
   also to the other person. Given a set of initially infected people and a graph of connections between 
   individuals in the population, the goal is to predict the spread of the disease.


   % ProbLog
   person(a).
   person(b).

   0.1::initialInf(X) :- person(X).
   0.1::contact(X,Y) :- person(X), person(Y).

   inf(X)      :- initialInf(X).
   0.6::inf(X) :- contact(X, Y), inf(Y).

   query(inf(_)). % inf(a): 0.1054 inf(b): 0.1054
   """

   Marginals:
   inf_0
   Marginal:
      false : 0.8945999955648102
      true : 0.10540000443518985
   inf_1
   Marginal:
      false : 0.8945999955229194
      true : 0.10540000447708066
   inf_2
   Marginal:
      false : 0.8887291173656646
      true : 0.11127088263433538
   inf_3
   Marginal:
      false : 0.8887291173656647
      true : 0.11127088263433532
   inf_4
   Marginal:
      false : 0.8887291173656647
      true : 0.11127088263433522
   inf
   Marginal:
      [false,false] : 0.8099999919428396
      [false,true] : 0.08460000362197063
      [true,false] : 0.0846000035800798
      [true,true] : 0.02080000085511006

   expectation:
   [ [ 'inf_0', 0.10540000443518985 ],
     [ 'inf_1', 0.10540000447708066 ],
     [ 'inf_2', 0.11127088263433538 ],
     [ 'inf_3', 0.11127088263433532 ],
     [ 'inf_4', 0.11127088263433522 ],
     [ 'inf', NaN ] ]


*/


var model = function() {

    var n = 2;
    var people = _.range(n);

    var initialInf = mem(function(p) {
        return flip(0.1);
    })
    
    var contact = (function(x, y) {
        if (x == y) {
            return false;
        } else {
            return flip(0.1);
        }
    })

    // The BLOG model use a time construct to avoid strange loops. This is not needed here.
    var inf1 = (function(p) {
        if (initialInf(p)) {
            return true;
        } else {
            var check = any(function(q) {return q != p && contact(p,q) && inf1(q)},people);
            if (
                check
            ) {
                return flip(0.6);
            } else {
                return false;
            }
        }
    })

    var inf = mem(function(p) { return inf1(p); });

    return {
        inf_0:inf(0),
        inf_1:inf(1),
        inf_2:inf(2),
        inf_3:inf(3),
        inf_4:inf(4),
        inf:map(function(p) {return inf(p)},people)        
    };
}

var d = Infer({method:"enumerate",maxExecutions:100000},model);
// var d = Infer({method:"rejection",samples:100000},model);
// var d = Infer({method:"MCMC",kernel:"MH",samples:100000},model);
// display(d);

exp_map_all(d,["expectation","marginals"]);
