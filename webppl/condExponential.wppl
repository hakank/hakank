/*
   From PSI test/condExponential.psi
   """
   https://www.quora.com/If-X-and-Y-are-independent-exponential-random-variables-with-parameter-1-What-is-E-X+Y-2-X-
1-Y-1
   """
   $ psi --expectation condExponential.psi
   E[r_] = 18

   Mathematica:
   """
   Expectation[(x + y)^2 | x > 1 && y > 1, {x ~ ExponentialDistribution[1], y ~ ExponentialDistribution[1]}]
   -> 18
   """

   This model:

   expectation:
   [ [ 'x', 1.9955040580159475 ],
     [ 'y', 2.0090700330972093 ],
     [ 'e', 18.075960618603165 ] ]

   Stat for v: x
   min: 1.0001363232850435 mean: 1.9955040580159378 max: 10.967755818824397 stdev: 1.0045536529287866

   Stat for v: y
   min: 1.0000175188627947 mean: 2.0090700330972 max: 10.534844074283166 stdev: 1.019775840859146

   Stat for v: e
   min: 4.026384418052887 mean: 18.075960618603172 max: 189.06851253499318 stdev: 14.744939579261699

   Credible interval for x (93%): [ 1.0001363232850435, 3.672166431203742 ]
   Credible interval for y (93%): [ 1.0000175188627947, 3.7154423880695875 ]
   Credible interval for e (93%): [ 4.201103992382735, 40.44034537040251 ]

*/

var model = function() {
    var x = exponential(1)
    var y = exponential(1)

    condition(x > 1 && y > 1)
    
    var e = Math.pow(x+y,2)
    return {
        x:x,
        y:y,
        e:e,
        
    }

    
}

// var d = Infer({method:"MCMC",kernel:"MH",samples:10000,verbose:true},model)
// var d = Infer({method:"SMC",particles:10000},model)
var d = Infer({method:"rejection",samples:10000},model)
// var d = Infer(model)
// display(d)

exp_map(d,["x","y","e"],["expectation"])

stat2(d,"x")
stat2(d,"y")
stat2(d,"e")

showCredibleInterval(d,"x", 0.93)
showCredibleInterval(d,"y", 0.93)
showCredibleInterval(d,"e", 0.93)
