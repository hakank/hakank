/*
  From a BLOG model in
  Yi Wu, Lei Li, Stuart Russell, Rastislav Bodik
  "Swift: Compiled Inference for Probabilistic Programming Languages"  
  Page 2

  Marginals:
  drawnD4
  Marginal:
    0 : 0.7609000000000004
    1 : 0.12200000000000011
    2 : 0.03680000000000003
    3 : 0.021900000000000013
    4 : 0.013399999999999997
    5 : 0.0097
    6 : 0.007999999999999997
    7 : 0.006299999999999999
    8 : 0.0041
    9 : 0.0033999999999999976
    10 : 0.0031000000000000003
    11 : 0.0024000000000000015
    12 : 0.002100000000000001
    14 : 0.0016000000000000007
    13 : 0.0013999999999999991
    15 : 0.0009000000000000006
    16 : 0.0009000000000000006
    17 : 0.0007000000000000001
    18 : 0.0002000000000000002
    19 : 0.00019999999999999985
  colorD4
  Marginal:
    "Green" : 0.8456
    "Blue" : 0.15439999999999998
  numBalls
  Marginal:
    1 : 0.6337000000000002
    2 : 0.1706
    3 : 0.0528
    4 : 0.029600000000000005
    5 : 0.021599999999999987
    7 : 0.015399999999999992
    10 : 0.010899999999999996
    6 : 0.010699999999999996
    9 : 0.007399999999999997
    8 : 0.00739999999999999
    11 : 0.006899999999999996
    12 : 0.005899999999999996
    18 : 0.004600000000000001
    20 : 0.0041
    14 : 0.0038999999999999994
    17 : 0.003600000000000003
    19 : 0.003500000000000001
    13 : 0.0030999999999999973
    16 : 0.0027999999999999987
    15 : 0.0015000000000000007

  expectation:
  [ [ 'drawnD4', 0.6893000000000002 ],
    [ 'colorD4', NaN ],
    [ 'numBalls', 2.3678999999999997 ] ]
  
  I.e. it's quite probable that there is just one ball (or perhaps two).

  cf ~/blog/urn_ball.blog
     ~/psi/urn_ball.psi
*/

var model = function() {

    var D = _top.Array(5); //5 draws: D[0],D[1],D[2],D[3], and D[4] (the unobserved)
    
    var numBalls = 1+randomInteger(20);
    
    var color = mem(function(b) {
        return categorical({ps:[0.9,0.1],vs:["Blue","Green"]});
    })
    
    var drawn = (function(d) {
        return randomInteger(numBalls);
    })

    // Original problem
    condition(color(drawn(D[0])) == "Green");
    condition(color(drawn(D[1])) == "Green");
    condition(color(drawn(D[2])) == "Green");
    condition(color(drawn(D[3])) == "Green");

    // Another problem
    /*
    condition(color(drawn(D[0])) == "Blue");
    condition(color(drawn(D[1])) == "Blue");
    condition(color(drawn(D[2])) == "Blue");
    condition(color(drawn(D[3])) == "Blue");
    */

    return {
        drawnD4:drawn(D[4]),
        colorD4:color(drawn(D[4])),
        numBalls:numBalls,

    }


}

// var d = Infer({method:"enumerate"},model);
// var d = Infer({method:"rejection",samples:10000},model);
// var d = Infer({method:"MCMC",kernel:"MH",samples:100000},model);
var d = Infer({method:"SMC",particles:10000},model);
// display(d);


exp_map(d,["drawnD4","colorD4","numBalls"]);



