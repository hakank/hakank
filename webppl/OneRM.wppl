/*
   1 RM Calculations (strength training)

   See https://en.wikipedia.org/wiki/One-repetition_maximum

   expectation:
   [ [ 'age', 60.01657456487115 ],
     [ 'weight', 99.95141686737735 ],
     [ 'reps', 6 ],
     [ 'onerm_epley', 169.49333213045844 ],
     [ 'onerm_age_epley', 302.53305519677394 ] ]


   Cf ~/blog/OneRM.blog

*/

var model = function() {

    var age_coeff =         
        {30: 1.000, 31: 1.016, 32: 1.031, 33: 1.046, 34: 1.059,
         35: 1.072, 36: 1.083, 37: 1.096, 38: 1.109, 39: 1.122,
         40: 1.135, 41: 1.149, 42: 1.162, 43: 1.176, 44: 1.189,
         45: 1.203, 46: 1.218, 47: 1.233, 48: 1.248, 49: 1.263,
         50: 1.279, 51: 1.297, 52: 1.316, 53: 1.338, 54: 1.361,
         55: 1.385, 56: 1.411, 57: 1.437, 58: 1.462, 59: 1.488,
         60: 1.514, 61: 1.541, 62: 1.568, 63: 1.598, 64: 1.629,
         65: 1.663, 66: 1.699, 67: 1.738, 68: 1.779, 69: 1.823,
         70: 1.867, 71: 1.910, 72: 1.953, 73: 2.004, 74: 2.060,
         75: 2.117, 76: 2.181, 77: 2.255, 78: 2.336, 79: 2.419,
         80: 2.540, 81: 2.597, 82: 2.702, 83: 2.831, 84: 2.981,
         85: 3.153, 86: 3.352, 87: 3.580, 88: 3.843, 89: 4.145,
         90: 4.493
        };
    
    var weight = Uniform({a:1,b:200});
    var reps = 1+randomInteger(30);
    var age = Uniform({a:30,b:90});
    
    var onerm_epley = Gaussian({mu:sample(weight)*(1.0 + reps/30.0),sigma:0.5});
    var onerm_age_epley = sample(onerm_epley) * age_coeff[Math.round(sample(age))];
    
    // var onerm_brzycki =  Gaussian({mu:sample(weight) * (36.0/(37.0 - reps)),sigma:0.5});
    // var onerm_age_brzycki = sample(onerm_brzycki) * age_coeff[Math.round(sample(age))];

    observe(age,63.0);    
    // condition(age==63);
    observe(weight,92.0);
    // condition(weight>=87.0 && weight<=93.0);
    condition(reps==6);
    
    // observe(onerm_epley,100.0);    
    // observe(onerm_brzycki,100.0);

    return {
        age:sample(age),
        weight:sample(weight),
        reps:reps,
        onerm_epley: sample(onerm_epley),
        onerm_age_epley:onerm_age_epley,
        // onerm_brzycki:sample(onerm_brzycki),
        // onerm_age_brzycki:onerm_age_brzycki, 
       
    }
}

// var d = Infer(model);
var d = Infer({method:"SMC",particles:10000},model);
// var d = Infer({method:"MCMC",kernel:"MH",samples:10000,lag:10},model);
// display(d);


exp_map_all(d,["expectation","marginals"]);
