/*
  Cluster watching in birthdays 

  From 
  John Brignell "Of birthdays and clusters"
  https://www.numberwatch.co.uk/of_birthdays_and_clusters.htm
  """
  At the time, ninety people had died of vCJD. The probability of two of them 
  having the same birthday is 0.999993848, i.e. a certainty. In fact there was 
  an evens chance of three of them having the same birthday. Likewise, if we 
  divided the UK up into 1000 areas of equal population, we would find by the 
  same calculation that the probability of two of the ninety coming from the 
  same area is about 0.98. Yet the original Queniborough two were claimed to be 
  statistically significant and the hunt was begun for more 'linked pairs'.
  
  """
  
  Compare with my R code (with Swedish comments) at
  http://www.hakank.org/sims/simulering.html "Cluster watching"

  In summary: 
  - The probability that at least two of 90 persons have the same birthday is
    about 1.
    We would require about 4 person having the same birthdays to give it
    some sort of significancy.

  - The probability that at least two of 90 persons live in the same of 1000
    regions is about 0.987.
    We would require about 3 person living in the same region to give it
    some sort of significancy.


  * 90 people having birhday on a certain day

  Marginals:
  meanVal
  Marginal:
    0.2465753424657534 : 1
  maxVal
  Marginal:
    3 : 0.49100000000000005
    2 : 0.47400000000000003
    4 : 0.03300000000000001
    5 : 0.0020000000000000005
  p
  Marginal:
    true : 1
  p2
  Marginal:
    2 : 0.29000000000000004
    3 : 0.22300000000000003
    1 : 0.206
    4 : 0.13799999999999996
    0 : 0.06699999999999999
    5 : 0.05099999999999999
    6 : 0.020000000000000004
    7 : 0.003000000000000002
    8 : 0.0020000000000000005

  expectation:
  [ [ 'meanVal', 0.2465753424657534 ],
    [ 'maxVal', 2.563 ],
    [ 'p', 1 ],
    [ 'p2', 2.419 ] ]

  Stat for v: meanVal
  min: 0.2465753424657534 mean: 0.2465753424657534 max: 0.2465753424657534 stdev: 0

  Stat for v: maxVal
  min: 2 mean: 3.5 max: 5 stdev: 1.118033988749895

  Credible interval for maxVal (94%): [ 2, 3 ]
  Credible interval for maxVal (99%): [ 2, 4 ]

  var maxVal
  min: 2
  listMean: 2.563
  listVar: 0.32403099999999535
  listStdev: 0.569237208903279
  max: 5
  Percentiles:
  [ [ 0, 2 ],
    [ 1, 2 ],
    [ 2.5, 2 ],
    [ 25, 2 ],
    [ 50, 3 ],
    [ 75, 3 ],
    [ 97.5, 4 ],
    [ 99, 4 ],
    [ 100, 5 ] ]
  Histogram:
  bins: [ 474, 0, 0, 0, 0, 0, 0, 491, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 2 ]


   * 90 people from 1000 regions
   For the probability of at least 2 of the 90 persons came from the same
   of the 1000 areas (change m to 1000 instead of 365):

  Marginals:
  meanVal
  Marginal:
    0.09 : 1
  maxVal
  Marginal:
    2 : 0.8740000000000001
    3 : 0.111
    1 : 0.012999999999999998
    4 : 0.0020000000000000005
  p
  Marginal:
    true : 0.987
    false : 0.012999999999999998
  p2
  Marginal:
    0 : 0.7060000000000002
    1 : 0.24600000000000002
    2 : 0.04600000000000001
    3 : 0.0020000000000000005

  expectation:
  [ [ 'meanVal', 0.09 ],
    [ 'maxVal', 2.1020000000000003 ],
    [ 'p', 0.987 ],
    [ 'p2', 0.3440000000000001 ] ]

  Stat for v: meanVal
  min: 0.09 mean: 0.09 max: 0.09 stdev: 0

  Stat for v: maxVal
  min: 1 mean: 2.5 max: 4 stdev: 1.118033988749895

  Credible interval for maxVal (94%): [ 2, 3 ]
  Credible interval for maxVal (99%): [ 1, 3 ]

  var maxVal
  min: 1
  listMean: 2.102
  listVar: 0.12159599999999754
  listStdev: 0.34870618004273674
  max: 4
  Percentiles:
  [ [ 0, 1 ],
    [ 1, 1 ],
    [ 2.5, 2 ],
    [ 25, 2 ],
    [ 50, 2 ],
    [ 75, 2 ],
    [ 97.5, 3 ],
    [ 99, 3 ],
    [ 100, 4 ] ]
  Histogram:
  bins: [ 13, 0, 0, 0, 0, 0, 0, 874, 0, 0, 0, 0, 0, 0, 111, 0, 0, 0, 0, 0, 2 ]


*/

var model = function() {
    var n = 90 // number of births
    var m = 365 // days
    // var m = 1000 // regions

    // For each of the n births get a random day/region
    var birthDays = mapN(function(i) {
        return randomInteger(m)
    },n)

    // The number of births of each days / people from a certain region
    var births = mapN(function(i) {
        return _.sum(mapN(function(j) { birthDays[j] == i ? 1 : 0 },n))
    },m)
    var meanVal = listMean(births)
    var maxVal = _.max(births)

    // What is the probability that there are more than 1 births on one of the days
    // (at last 2 persons coming from the same region)
    var p = maxVal > 1

    // How many days/regions has values larger than 1?
    var p2 = _.sum(mapN(function(i) { births[i] > 1 },n))
    
    return {
        // births:births,
        meanVal:meanVal,
        maxVal:maxVal,
        p:p,
        p2:p2,
    }
}

// var d = Infer({method:"enumerate",maxExecutions:100000},model)
// var d = Infer({method:"MCMC",kernel:"MH",samples:1000},model)
var d = Infer({method:"SMC",particles:1000,rejuvSteps:0},model)
// display(d)

exp_map(d,["meanVal","maxVal","p","p2"],["marginals","expectation"])
console.log("\n")
stat2(d,"meanVal")
stat2(d,"maxVal")


showCredibleInterval(d,"maxVal",0.94)

showCredibleInterval(d,"maxVal",0.99)


var ps = [0,1, 2.5,25,50,75,97.5,99,100]; // quantiles
show_stats(d,"maxVal",ps);
