/*
  Test of the Javascript function shuffle() 
  It's defined in hakank_utils.js but is wrapped as a WebPPL function in hakank_utils.wppl

  Note that shuffle() uses Math.random() and will thus not work with Enumerate.

  The expected values:
  - s (the number of fixed points) = 1
  - p (no fixed point) = 1/e = 0.36787944117144233

  Marginals:
  s
  Marginal:
    0 : 0.36845
    1 : 0.36794
    2 : 0.18287
    3 : 0.06169999999999999
    4 : 0.015289999999999995
    5 : 0.0030800000000000007
    6 : 0.0005300000000000002
    7 : 0.00011999999999999994
    8 : 0.000019999999999999998
  p
  Marginal:
    false : 0.6315500000000001
    true : 0.36845

  expectation:
  [ [ 's', 0.99952 ], 
    [ 'p', 0.36845 ] ]

*/

var model = function() {
    var n = 52
    var a = shuffle(_.range(n)) // shuffle the array

    // How many a[i] == i?
    var s = sum(mapN(function(i) { a[i] == i},n))
    // No fixed point (i.e. a derangement)
    var p = s == 0
    
    return {
        s:s,
        p:p,
    }
    
}

// var d = Infer(model) // shuffle does not work with Enumerate
var d = Infer({method:"rejection",samples:100000},model)
// var d = Infer({method:"SMC",particles:1000},model)
// display(d)

exp_map(d,["s","p"])
