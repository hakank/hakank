/*
  From Statistics101 (Resampling Stats)
  File threewayElection.txt
  """
  A poll was taken before an election in which three politicians were
  competing. The sample size was 400. The result was that 10 percent of
  those polled favored politician A, 40 percent favored politician B,
  and the rest favored politician C. What are the 95 percent confidence
  intervals for the results for each politician?
  -> 
  polAConfidence: (7.249999999999999 13.0)
  polBConfidence: (35.25 44.75)
  polCConfidence: (45.25 54.75)
  """

  expectation:
  [ [ 'a', 10.049000000000001 ],
    [ 'b', 40.002 ],
    [ 'c', 49.94900000000001 ] ]

  Credible interval for a (95%): [ 7.000000000000001, 13 ]
  Credible interval for b (95%): [ 35.5, 45 ]
  Credible interval for c (95%): [ 44.75, 54.25 ]

*/

var population = _.flatten([rep(10,"A"),rep(40,"B"),rep(50,"C")])
var model = function() {
    var n = 400 // sample size
    var sample = resample(n,population)
    var a = count("A",sample) / n * 100
    var b = count("B",sample) / n * 100
    var c = count("C",sample) / n * 100
    return {
        a:a,
        b:b,
        c:c,
        pa:a>50,
        pb:b>50,
        pc:c>50,       
    }
    
}

var d = Infer({method:"rejection",samples:1000},model)
// display(d)
exp_map_all(d,["expectation"])

showCredibleInterval(d,"a",0.95)
showCredibleInterval(d,"b",0.95)
showCredibleInterval(d,"c",0.95)

/*
  Using multinomial() and sampling for the credible interval.

  Here we also check the probability that they get > 50% votes.

  Note: showCredibleInterval does not work when using Enumeration 
  since getSamples() returns [].

  Model 2: Using multinomial + sampling for credible interval:
  expectation:
  [ [ 'a', 9.999999999999977 ],
    [ 'b', 40.00000000000003 ],
    [ 'c', 50.000000000000014 ],
    [ 'pa', 9.015968215180154e-92 ],
    [ 'pb', 0.000021237877605114143 ],
    [ 'pc', 0.48006534901810627 ],
    [ 'p50', 0.48008658689570843 ] ]

  credibleInterval a (95%) [ 7.000000000000001, 12.75 ]
  credibleInterval b (95%) [ 35, 45 ]
  credibleInterval c (95%) [ 45, 54.75 ]

*/
console.log("\nModel 2: Using multinomial + sampling for credible interval:")
var model2 = function() {
    var n = 400
    var sample = multinomial([10/100,40/100,50/100],n)
    var a = sample[0] / n * 100
    var b = sample[1] / n * 100 
    var c = sample[2] / n * 100

    return {
        a:a,
        b:b,
        c:c,
        pa:a>50,
        pb:b>50,
        pc:c>50,
    }
}

var d2 = Infer(model2)
exp_map_all(d2,["expectation"])

var samples = repeat(1000,function() {sample(d2)})
var qs = [0.025,0.975]
console.log("credibleInterval a (95%)",percentile_pct(map(function(v) {v["a"]},samples),qs))
console.log("credibleInterval b (95%)",percentile_pct(map(function(v) {v["b"]},samples),qs))
console.log("credibleInterval c (95%)",percentile_pct(map(function(v) {v["c"]},samples),qs))
