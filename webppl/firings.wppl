/* 
  From "Resampling Stats Illustrations" (http://www.statistics101.net/PeterBruce_05-illus.pdf)
  Page 54
  """
  Unusual Statistics
  (program “firings”)
  One of the advantages of resampling is its suitability for use with
  non-standard statistics. Here is an illustration of a statistic de-
  signed to meet the needs of a specific situation:
  A company has been accused of firing workers (it has 50) when
  they get close to the level of seniority at which their pension would
  be vested (25 years). The union notes that the levels of seniority of
  7 fired workers in the last 12 months were unusually close to 25
  years.
  Seniority at discharge (years): 23 19 24 23 25 2 5
  Seniority of all workers:
     11 8 24 36 20 19 11 9 10 9 5
     4 2 1 9 21 16 17 11 1 1 23
     19 24 40 28 5 7 1 34 20 16 31
     23 50 4 1 8 8 14 12 32 1 15
     12 25 19 5 24 2
  Note: A “25” indicates the worker’s pension has vested.
  The company counters that operational considerations were the
  only factors in each of the firings and that the proximity of the
  firing dates to pension vesting dates was purely coincidental, the
  result of random chance.
  Can we assess whether this claim is reasonable?
  ...
  Result:
  prob = .11
  The estimated p-value is .11, indicating that a sum as low as the
  observed value of 79 might happen 11% of the time, simply
  drawing workers at random. We conclude the evidence is not
  strong that there was systematic firing of those close to vesting.
  """

  Here we get a little lower probability, but it's still fairly significant: 8.3%

  sum_discharged: 79
  expectation:
  [ [ 's', 109.08300000000001 ], [ 'p', 0.07799999999999999 ] ]

  Credible interval for s (95%): [ 70, 148 ]

*/

var seniority_discharged = [23,19,24,23,25,2,5]
var seniority_all_workers = [11,8,24,36,20,19,11,9,10,9,5,
                             4,2,1,9,21,16,17,11,1,1,23,
                             19,24,40,28,5,7,1,34,20,16,31,
                             23,50,4,1,8,8,14,12,32,1,15,
                             12,25,19,5,24,2]

var sum_seniority = function(data) {
    sum(map(function(v) { 25-v <= 0 ? 25 : 25-v},data))
}

var sum_discharged = sum_seniority(seniority_discharged)
console.log("sum_discharged:", sum_discharged)

var model = function() {
    // var discharged_sample = resample(seniority_discharged.length,seniority_all_workers)
    var discharged_sample = draw_without_replacement2(seniority_discharged.length,seniority_all_workers,[])    
    var s = sum_seniority(discharged_sample)
    var p = s <= sum_discharged
    return {
        s:s,
        p:p,
    }
}

var d = Infer({method:"rejection",samples:1000},model)
// var d = Infer({method:"SMC",particles:1000,rejuvSteps:5},model)
exp_map_all(d,["expectation"])

showCredibleInterval(d,"s",0.95)
