/*
   Sequence waiting times.

   From 
   Gunnar Blom, Lars Holst, Dennis Sandell:
   "Problems and Snapshots from the World of Probability"
   Page 4ff, Problem 1.4 Patterns I, (Part Problem 1)

   Problem: Waiting time for a pattern (coin flipping)
   
   What is the waiting time for the patterns[0,1] in a coin 
   flipping sequence? For the pattern [1,1]?
   Answer: 
     * waiting time for [0,1] = 4
     * waiting time for [1,1] = 6

   This model verifies this result.   

Pattern:  [ 0, 1 ]
Marginals:
len
Marginal:
    2 : 0.2510000000000001
    3 : 0.24000000000000013
    4 : 0.1937000000000001
    5 : 0.12890000000000001
    6 : 0.07850000000000001
    7 : 0.04810000000000002
    8 : 0.02600000000000001
    9 : 0.016300000000000002
    10 : 0.0078
    11 : 0.004899999999999997
    12 : 0.0025000000000000005
    13 : 0.0017000000000000001
    15 : 0.0003000000000000001
    14 : 0.0002000000000000002
    22 : 0.00010000000000000009
expectation:
(node:7806) [DEP0079] DeprecationWarning: Custom inspection function on Objects via .inspect() is deprecated
[ [ 'len', 3.9972000000000008 ] ]


Pattern:  [ 1, 1 ]
Marginals:
len
Marginal:
    2 : 0.2497999999999999
    4 : 0.12999999999999995
    3 : 0.12089999999999994
    5 : 0.09479999999999997
    6 : 0.07929999999999998
    7 : 0.06439999999999996
    8 : 0.04909999999999999
    9 : 0.03769999999999999
    10 : 0.03279999999999998
    11 : 0.026099999999999984
    12 : 0.022099999999999974
    13 : 0.01699999999999996
    14 : 0.01579999999999996
    15 : 0.011299999999999963
    16 : 0.008899999999999991
    17 : 0.008399999999999975
    18 : 0.006399999999999986
    19 : 0.004699999999999995
    20 : 0.003799999999999996
    21 : 0.003500000000000001
    22 : 0.002999999999999999
    23 : 0.002399999999999997
    24 : 0.0017999999999999982
    25 : 0.0013999999999999991
    27 : 0.0008999999999999998
    28 : 0.0005999999999999997
    26 : 0.0004999999999999996
    29 : 0.00039999999999999975
    36 : 0.00039999999999999975
    31 : 0.0003000000000000001
    30 : 0.0003000000000000001
    33 : 0.0003000000000000001
    32 : 0.0002000000000000002
    37 : 0.0002000000000000002
    40 : 0.0002000000000000002
    34 : 0.00010000000000000009
    41 : 0.00010000000000000009
    47 : 0.00010000000000000009
expectation:
[ [ 'len', 5.987899999999995 ] ]

*/

//
// Show the distribution and expected waiting time for
// finding the pattern <pattern> in a coin flip sequence.
//
var findPattern = function(pattern) {
    console.log("\n\nPattern: ", pattern);
    
    var model = function() {
        var patternLen = pattern.length;
        
        var flipSequence = function(a) {
            var len = a.length;
            if (_.isEqual(a.slice(len-patternLen),pattern)) {
                return a;
            } else {
                return flipSequence(a.concat(flip() ? 1 : 0));
            }
        }
        
        var a = flipSequence([]);
        
        return {
            a:a,
            len:a.length,
        }

    }

    // var d = Infer(model);
    // var d = Infer({method:"enumerate"},model); // JavaScript heap out of memory
    // var d = Infer({method:"enumerate",maxExecutions:100000},model);
    var d = Infer({method:"rejection",samples:10000},model);
    // var d = Infer({method:"MCMC",samples:10000},model);
    // display(d);
    exp_map(d,["len"],["marginals","expectation"]);
        
}

findPattern([0,1]); // Waiting time: 4

findPattern([1,1]); // Longer waiting time: 6

// findPattern([1,1,1]);






