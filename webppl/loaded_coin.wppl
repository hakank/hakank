/*
   From Osvaldo Martin: "Bayesian Analysis with Python", 2nd edition,
   page 39, exercise 6.
   """
   Let's suppose that we have two coins; when we toss the first coin, half
   of the time it lands tails and half of the time on heads. The other coin
   is a loaded coin that always lands on heads. If we take one if the coins
   at random and get a head, what is the probability the the coin is the
   unfair one?
   """    

   Marginals:
   coin_fair
   Marginal:
     false : 0.6666666666666666
     true : 0.33333333333333337
   coin_loaded
   Marginal:
     true : 0.6666666666666666
     false : 0.33333333333333337

   expectation:
   [ [ 'coin_fair', 0.33333333333333337 ],
     [ 'coin_loaded', 0.6666666666666666 ] ]

   This is a port of my Racket/Gamble model gamble_loaded_coin.rkt (model2)

*/

var model = function() {

    // What coin
    var fair = 0
    var loaded = 1
    
    // The outcome
    var tail = 0
    var head = 1
    
    var coin = categorical({ps:[1/2,1/2],vs:[fair,loaded]})
    var outcome = (coin == fair) ? categorical({ps:[1/2,1/2],vs:[tail,head]}) : head
    
    condition(outcome == head)
    return {
        coin_fair:(coin == fair),
        coin_loaded:(coin == loaded)
    }
}

var d = Infer(model)
exp_map_all(d)
