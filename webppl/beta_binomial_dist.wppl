/*
  Generating Beta-binomial distribution

  https://en.wikipedia.org/wiki/Beta-binomial_distribution#Generating_beta_binomial-distributed_random_variables
  """
  To draw a beta-binomial random variate X ~ BetaBin(n,a,b) 
  simply draw p ~ Beta(a,b) and then draw X ~ B(n,p)
  """

  Marginals:
  a
  Marginal:
    10 : 1
  b
  Marginal:
    3 : 1
  x
  Marginal:
    10 : 0.1991
    11 : 0.188
    9 : 0.1812
    8 : 0.1364
    12 : 0.11199999999999999
    7 : 0.09029999999999999
    6 : 0.0541
    5 : 0.024299999999999995
    4 : 0.009
    3 : 0.0037999999999999996
    2 : 0.0016000000000000007
    1 : 0.00019999999999999985

  expectation:
  [ [ 'a', 10 ], [ 'b', 3 ], [ 'x', 9.253999999999998 ] ]


  var x
  Num samples: 10000
  min: 1
  listMean: 9.254
  listVar: 3.7208840000000194
  listStdev: 1.9289593049102978
  max: 12

  Percentiles:
  [ [ 0, 1 ],
    [ 1, 4 ],
    [ 2.5, 5 ],
    [ 25, 8 ],
    [ 50, 9 ],
    [ 75, 11 ],
    [ 97.5, 12 ],
    [ 99, 12 ],
    [ 100, 12 ] ]

  Histogram ( 10000 samples)
  Value | #Obs | Rel. freq (prob / cumulative prob)
    1     2  ( 0 / 0 )
    2    16 * ( 0.002 / 0.002 )
    3    38 ** ( 0.004 / 0.006 )
    4    90 **** ( 0.009 / 0.015 )
    5   243 ********** ( 0.024 / 0.039 )
    6   541 ********************** ( 0.054 / 0.093 )
    7   903 ************************************ ( 0.09 / 0.183 )
    8  1364 ******************************************************* ( 0.136 / 0.32 )
    9  1812 ************************************************************************* ( 0.181 / 0.501 )
   10  1991 ******************************************************************************** ( 0.199 / 0.7 )
   11  1880 **************************************************************************** ( 0.188 / 0.888 )
   12  1120 ********************************************* ( 0.112 / 1 )

*/

/*
var beta_binomial_dist = function(n,a,b) {
    var p = beta(a,b)
    var x = binomial(p,n)
    return x
}
*/

var model = function() {
    var a = 10
    var b = 3
    var x = beta_binomial_dist(12,a,b)
    return {
        a:a,
        b:b,
        x:x,
    }
}

// var d = Infer({method:"SMC",particles:1000,rejuvSteps:5},model)
var d = Infer({method:"rejection",samples:10000},model)
// var d = Infer({method:"MCMC",kernel:"HMC",samples:10000},model)
exp_map_all(d,["marginals","expectation"])

show_stats(d,"x")
