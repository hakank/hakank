/*
  From https://twitter.com/littmath/status/1769044719034647001
  """
  Flip a fair coin 100 times—it gives a sequence of heads (H) and tails (T). 
  For each HH in the sequence of flips, Alice gets a point; for each HT, Bob does, 
  so e.g. for the sequence THHHT Alice gets 2 points and Bob gets 1 point. 
  Who is most likely to win?
  """

  From 
  https://twitter.com/littmath/status/1769408478139785497
  """
  The correct answer is “Bob.” Congrats to the 10% who got it right — those few brave dreamers.
  Image
  """

  The problem is also discussed in the Quanta Magazine article on Daniel Litt:
  "Perplexing the Web, One Probability Puzzle at a Time" by Erica Klarreich:
  https://www.quantamagazine.org/perplexing-the-web-one-probability-puzzle-at-a-time-20240829/?mc_cid=94caee8978


  Unfortunately, enumerate is too slow for n=100.

  For n = 10 (enumerate):
  expectation:
  [ [ 'alice', 2.25 ],
    [ 'bob', 2.25 ],
    [ 'alice_point', 0.859375 ],
    [ 'bob_point', 0.9892578125000001 ],
    [ 'alice_better_than_bob', 0.36230468749999994 ],
    [ 'diff1', 3.0531133177191805e-16 ],
    [ 'bob_better_than_alice', 0.4531249999999999 ],
    [ 'diff2', -4.440892098500626e-16 ],
    [ 'same', 0.18457031249999994 ] ]


  For n = 20 (enumerate)
  [ [ 'alice', 4.7500000000000036 ],
    [ 'bob', 4.749999999999998 ],
    [ 'alice_point', 0.9831094741821287 ],
    [ 'bob_point', 0.9999799728393555 ],
    [ 'alice_better_than_bob', 0.4047431945800798 ],
    [ 'diff1', 4.315992008230296e-15 ],
    [ 'bob_better_than_alice', 0.4677152633666982 ],
    [ 'diff2', -4.3021142204224816e-15 ],
    [ 'same', 0.12754154205322207 ] ]


  For n = 100 (rejection, 100000 samples):
  [ [ 'alice', 24.76019 ],
    [ 'bob', 24.754309999999986 ],
    [ 'alice_point', 1 ],
    [ 'bob_point', 1 ],
    [ 'alice_better_than_bob', 0.4575399999999994 ],
    [ 'diff1', 0.005880000000001148 ],
    [ 'bob_better_than_alice', 0.4858600000000001 ],
    [ 'diff2', -0.005879999999999802 ],
    [ 'same', 0.05660000000000006 ] ]

  Conclusion: even though the average of alice's and bob's points are
  the same, bob is better off (bob_better_than_alice > alice_better_than_bob).


*/

var model = function() {
    var n = 20
    var H = 1
    var T = 0
    var a = mapN(function() { flip() ? H : T } , n)

    var alice = sum( mapN(function(i) {return a[i] == H && a[i+1] == H ? 1 : 0},n-1))
    var bob = sum( mapN(function(i) { return a[i] == H && a[i+1] == T ? 1 : 0},n-1))    
    // console.log("alice:",alice,"bob:",bob)
    
    var alice_point = alice > 0
    var bob_point = bob > 0

    var alice_better_than_bob = alice > bob
    var diff1 = alice - bob

    var bob_better_than_alice = bob > alice
    var diff2 = bob - alice

    var same = alice == bob
    
    // console.log([a,"alice:",alice,"bob:",bob,"diff:",diff])
    
    return {
        // a:a,
        alice:alice,
        bob:bob,        
        alice_point:alice_point,
        bob_point:bob_point,
        alice_better_than_bob:alice_better_than_bob,
        diff1:diff1,
        bob_better_than_alice:bob_better_than_alice,
        diff2:diff2,
        same:same,
    }
}

// var d = Infer(model) // -> rejection
var d = Infer({method:"enumerate"},model) // Too slow for n=100, but ok for n=10
// var d = Infer({method:"enumerate",maxRuntimeInMS:60000},model) // nope
// var d = Infer({method:"enumerate",maxExecutions:100000},model) // -> crash
// var d = Infer({method:"rejection",samples:100000},model) 
exp_map_all(d)
