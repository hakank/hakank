/*
  Changepoint detection
  From https://nishanthu.github.io/articles/ChangePointAnalysis.html

  See ~/jags/change_point.R
  The JAGS model
  model {
     for (i in 1:N) {
       mu0[i] = ifelse(i < cp, mu1, mu2)
       x[i] ~ dnorm(mu0[i], 1)
     }  
     mu1 ~ dunif(0, mu)
     mu2 ~ dunif(mu, 10*mu)
     cp ~ dunif(0, N)   
   }
"""
out$cp %>% as.vector %>% mean %>% round(1)
[1] 13.5
"""

   Also see http://hakank.org/blog_ppl/changepoint.blog

   This webppl model:
   Marginal for cp:
    13 : 0.9218999999999999
    12 : 0.0706
    11 : 0.006000000000000009
    30 : 0.0007000000000000008
    15 : 0.0005000000000000006
    21 : 0.0002000000000000002
    27 : 0.00010000000000000009


*/


var model = function() {

    // Generated by R:
    // > c(rnorm(13, mean=0, sd=0.5), rnorm(20, mean=4, sd=0.5))
    var ys = [0.90685440,0.38219559,0.13508408,-0.96054590,0.78553871,0.06791336,-0.09750806,-0.85431057,
              0.33478539,0.76388689,0.52911522,-0.41226421,1.53302740,
              5.01118838,4.75164473,3.79149212,3.97544567,4.33985561,4.52511631,4.21723600,
              4.22733898,3.80925885,3.65504091,3.25267865,3.85339052,3.40136529,4.21462117,
              3.94033196,4.00900359,4.44148942,4.23449516,4.52032000,4.41335270];
    
    var N = ys.length;
    var mu = listMean(ys);

    var mu1 = uniform(0, mu);
    var mu2 = uniform(mu, 10*mu);
    var cp = randomInteger(N);
    
    var mu0 = function(i) {
        return i < cp ? mu1 : mu2;
    }
    var y = function(i) {
        return  Gaussian({mu:mu0(i), sigma:1});
    }
    
    // observe the values in y
    mapIndexed(function(i,val) {
        observe(y(i), val);
    }, ys);
    
    return {mu1:mu1,
            mu2:mu2,
            cp:cp};
}

// var d = Infer(model);
var d = Infer({method:"MCMC",kernel:"MH",samples:10000,verbose:true},model);
// display(d);

exp_map(d,["mu1","mu2","cp"]);
