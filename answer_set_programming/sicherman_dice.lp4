% 
% Sicherman Dice in ASP.
% 
% From http://en.wikipedia.org/wiki/Sicherman_dice
% """ 
% Sicherman dice are the only pair of 6-sided dice which are not normal dice, 
% bear only positive integers, and have the same probability distribution for 
% the sum as normal dice.
% 
% The faces on the dice are numbered 1, 2, 2, 3, 3, 4 and 1, 3, 4, 5, 6, 8.
% """
%
% I read about this problem in a book/column by Martin Gardner long
% time ago, and got inspired to model it now by the WolframBlog post
% "Sicherman Dice": http://blog.wolfram.com/2010/07/13/sicherman-dice/
%
% 
% This was created by Hakan Kjellerstrand, hakank@gmail.com
% See also http://www.hakank.org/answer_set_programming/
%

%
% This program shows the two different ways mentioned in the 
% Wikipedia page: first the standard way and then the Sicherman dice:
% 
% d1 = [1, 2, 3, 4, 5, 6]
% d2 = [1, 2, 3, 4, 5, 6]
% ----------
% d1 = [1, 2, 2, 3, 3, 4]
% d2 = [1, 3, 4, 5, 6, 8]
%
%
% Extra: If we also allow 0 (e.g. with -c start=0) as a 
% value of the dice then the following two solutions are also valid:
% 
% d1 = [0, 1, 1, 2, 2, 3]
% d2 = [2, 4, 5, 6, 7, 9]
% ----------
% d1 = [0, 1, 2, 3, 4, 5]
% d2 = [2, 3, 4, 5, 6, 7]
%

#const n = 6.  % number of side per die
#const m = 10. % max integer on a die
#const start = 1. % start value (set to 0 for the extra two solutions)

% standard distribution of 2 dice
dist(2, 1).
dist(3, 2).
dist(4, 3).
dist(5, 4).
dist(6, 5).
dist(7, 6).
dist(8, 5).
dist(9, 4).
dist(10,3).
dist(11,2).
dist(12,1).

sides(1..n).
values(start..m).
dists(2..12).

dist_sums(S) :- dist(_, S).

% Dice 1 and 2
1 { d1(Side, Value) : values(Value) } 1 :- sides(Side).
1 { d2(Side, Value) : values(Value) } 1 :- sides(Side).

% combine the dice so we can #sum over them
comb(S1,V1,S2,V2) :- d1(S1,V1), d2(S2,V2).
1 { comb(S1,V1,S2,V2) : values(V1),values(V2) } 1 :- sides(S1),sides(S2).

% symmetry breaking
:- d1(S1a,V1a), d1(S1b,V1b), S1a < S1b, V1a > V1b.
:- d2(S2a,V2a), d2(S2b,V2b), S2a < S2b, V2a > V2b.
:- d1(S,V1),d2(S,V2), V1 > V2.

Sum #sum { 1,S1,S2:comb(S1, V1, S2, V2) : sides(S1),sides(S2), values(V1),values(V2) , V1+V2 == K } Sum :- dist(K, Sum).

#show d1/2.
#show d2/2.
% #show comb/4.
